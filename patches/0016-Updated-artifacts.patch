From 180dcbc072415edfa0adc99abb9ead83da67b3c0 Mon Sep 17 00:00:00 2001
From: abrignoni <abrignoni@gmail.com>
Date: Fri, 15 Jul 2022 18:40:01 -0400
Subject: [PATCH 16/19] Updated artifacts

---
 aleapp.py                                     | 105 +++++++++++-------
 aleapp.spec                                   |   2 +-
 aleappGUI.py                                  |  45 ++++----
 aleappGUI.spec                                |  11 +-
 hook-plugin_loader.py                         |  24 ++++
 plugin_loader.py                              |  65 +++++++++++
 scripts/artifacts/AVG.py                      |   9 +-
 scripts/artifacts/BashHistory.py              |   9 +-
 scripts/artifacts/Cast.py                     |   8 +-
 scripts/artifacts/Cello.py                    |   8 +-
 scripts/artifacts/ChessComAccount.py          |   8 +-
 scripts/artifacts/ChessComFriends.py          |   7 +-
 scripts/artifacts/ChessComGames.py            |   6 -
 scripts/artifacts/ChessComMessages.py         |   7 +-
 scripts/artifacts/ChessWithFriends.py         |   9 +-
 scripts/artifacts/DocList.py                  |   8 +-
 scripts/artifacts/FacebookMessenger.py        |   9 +-
 .../artifacts/FilesByGoogle_FilesMaster.py    |  12 +-
 .../artifacts/FilesByGoogle_SearchHistory.py  |  12 +-
 scripts/artifacts/HideX.py                    |   8 +-
 scripts/artifacts/NQVault.py                  |   7 +-
 scripts/artifacts/Oruxmaps.py                 |   8 +-
 scripts/artifacts/Turbo_AppUsage.py           |   9 +-
 scripts/artifacts/Turbo_Battery.py            |   8 +-
 scripts/artifacts/Viber.py                    |   7 +-
 scripts/artifacts/WhatsApp.py                 |   8 +-
 scripts/artifacts/WordsWithFriends.py         |   8 +-
 scripts/artifacts/Xender.py                   |   8 +-
 scripts/artifacts/Zapya.py                    |   8 +-
 scripts/artifacts/accounts_ce.py              |  11 +-
 scripts/artifacts/accounts_ce_authtokens.py   |   9 +-
 scripts/artifacts/accounts_de.py              |  10 +-
 scripts/artifacts/adb_hosts.py                |  12 +-
 scripts/artifacts/airGuard.py                 |   7 +-
 scripts/artifacts/appLockerfishingnet.py      |   9 +-
 scripts/artifacts/appLockerfishingnetdb.py    |   9 +-
 scripts/artifacts/appLockerfishingnetpat.py   |   9 +-
 scripts/artifacts/appicons.py                 |   8 +-
 scripts/artifacts/appopSetupWiz.py            |   9 +-
 scripts/artifacts/appops.py                   |   9 +-
 scripts/artifacts/atrackerdetect.py           |   9 +-
 scripts/artifacts/battery_usage_v4.py         |   8 +-
 scripts/artifacts/bluetoothConnections.py     |   8 +-
 scripts/artifacts/browserlocation.py          |   7 --
 scripts/artifacts/build.py                    |   8 +-
 scripts/artifacts/burner.py                   |  11 +-
 scripts/artifacts/cachelocation.py            |   8 +-
 scripts/artifacts/calllog.py                  |   8 +-
 scripts/artifacts/calllogs.py                 |  12 +-
 scripts/artifacts/cashApp.py                  |   8 +-
 scripts/artifacts/chrome.py                   |   9 +-
 scripts/artifacts/chromeAutofill.py           |   7 --
 scripts/artifacts/chromeBookmarks.py          |   7 --
 scripts/artifacts/chromeCookies.py            |   7 --
 scripts/artifacts/chromeLoginData.py          |   9 +-
 scripts/artifacts/chromeMediaHistory.py       |   8 +-
 .../artifacts/chromeNetworkActionPredictor.py |   8 +-
 scripts/artifacts/chromeOfflinePages.py       |   9 +-
 scripts/artifacts/chromeTopSites.py           |   9 +-
 scripts/artifacts/clipBoard.py                |   8 +-
 scripts/artifacts/cmh.py                      |   8 +-
 scripts/artifacts/contacts.py                 |  12 +-
 scripts/artifacts/discreteNative.py           |   9 +-
 scripts/artifacts/duckThumbs.py               |   9 +-
 scripts/artifacts/emulatedSmeta.py            |  15 ++-
 scripts/artifacts/errp.py                     |   9 +-
 scripts/artifacts/etc_hosts.py                |   9 +-
 scripts/artifacts/factory_reset.py            |   9 +-
 scripts/artifacts/firefox.py                  |   9 +-
 scripts/artifacts/firefoxCookies.py           |   9 +-
 scripts/artifacts/firefoxDownloads.py         |   9 +-
 scripts/artifacts/firefoxFormHistory.py       |   9 +-
 scripts/artifacts/firefoxPermissions.py       |   9 +-
 .../artifacts/firefoxRecentlyClosedTabs.py    |   9 +-
 scripts/artifacts/firefoxTopSites.py          |   9 +-
 scripts/artifacts/fitbitActivity.py           |   7 --
 scripts/artifacts/fitbitDevices.py            |   9 +-
 scripts/artifacts/fitbitExercise.py           |   9 +-
 scripts/artifacts/fitbitHeart.py              |   9 +-
 scripts/artifacts/fitbitSleep.py              |   7 +-
 scripts/artifacts/fitbitSocial.py             |   7 +-
 scripts/artifacts/fitbitWalk.py               |   7 +-
 scripts/artifacts/gboard.py                   |   7 --
 scripts/artifacts/gmail.py                    |   9 +-
 scripts/artifacts/googleCallScreen.py         |   8 +-
 scripts/artifacts/googleChat.py               |   9 +-
 scripts/artifacts/googleDuo.py                |   8 +-
 scripts/artifacts/googleFitGMS.py             |   7 +-
 scripts/artifacts/googleKeepNotes.py          |   8 +-
 scripts/artifacts/googleMessages.py           |   9 +-
 scripts/artifacts/googleNowPlaying.py         |  21 ++--
 scripts/artifacts/googlePhotos.py             |   8 +-
 scripts/artifacts/googlePlaySearches.py       |   7 +-
 scripts/artifacts/googleQuickSearchbox.py     |   9 +-
 .../artifacts/googleQuickSearchboxRecent.py   |   9 +-
 scripts/artifacts/googleTasks.py              |   8 +-
 scripts/artifacts/googlemapaudio.py           |   6 -
 scripts/artifacts/googlemaplocation.py        |   7 --
 scripts/artifacts/groupMe.py                  |   9 +-
 scripts/artifacts/imagemngCache.py            |   8 +-
 scripts/artifacts/imo.py                      |   8 +-
 scripts/artifacts/installedappsGass.py        |   7 --
 scripts/artifacts/installedappsLibrary.py     |   8 +-
 scripts/artifacts/installedappsVending.py     |   8 +-
 scripts/artifacts/kijijiConversations.py      |   7 --
 scripts/artifacts/kijijiLocalUserInfo.py      |   8 +-
 scripts/artifacts/kijijiRecentSearches.py     |   8 +-
 scripts/artifacts/last_boot_time.py           |   9 +-
 scripts/artifacts/lgRCS.py                    |   8 +-
 scripts/artifacts/line.py                     |   7 +-
 scripts/artifacts/mega.py                     |   9 +-
 scripts/artifacts/mega_transfers.py           |   6 -
 scripts/artifacts/mewe.py                     |   7 --
 scripts/artifacts/pSettings.py                |   7 +-
 scripts/artifacts/packageGplinks.py           |   8 +-
 scripts/artifacts/packageInfo.py              |   8 +-
 scripts/artifacts/permissions.py              |   8 +-
 scripts/artifacts/persistentProp.py           |   9 +-
 scripts/artifacts/playgroundVault.py          |   8 +-
 scripts/artifacts/powerOffReset.py            |   7 --
 scripts/artifacts/protonmailContacts.py       |   9 +-
 scripts/artifacts/protonmailMessages.py       |   9 +-
 scripts/artifacts/recentactivity.py           |   8 +-
 scripts/artifacts/roles.py                    |   7 +-
 scripts/artifacts/runtimePerms.py             |   7 +-
 scripts/artifacts/sRecoveryhist.py            |   9 +-
 scripts/artifacts/sWipehist.py                |   9 +-
 scripts/artifacts/samsungSmartThings.py       |   7 --
 scripts/artifacts/samsungWeatherClock.py      |   9 +-
 scripts/artifacts/scontextLog.py              |   8 +-
 scripts/artifacts/settingsSecure.py           |   7 +-
 scripts/artifacts/setupWizardinfo.py          |   9 +-
 scripts/artifacts/shareit.py                  |   8 +-
 scripts/artifacts/shutdown_checkpoints.py     |   7 --
 scripts/artifacts/siminfo.py                  |   9 +-
 scripts/artifacts/skout.py                    |   8 +-
 scripts/artifacts/skype.py                    |   7 +-
 scripts/artifacts/slopes.py                   |   8 +-
 scripts/artifacts/smanagerCrash.py            |   8 +-
 scripts/artifacts/smanagerLow.py              |   8 +-
 scripts/artifacts/smembersAppInv.py           |   8 +-
 scripts/artifacts/smembersEvents.py           |   8 +-
 scripts/artifacts/smsmms.py                   |   7 --
 scripts/artifacts/smyFiles.py                 |   8 +-
 scripts/artifacts/smyfilesRecents.py          |   8 +-
 scripts/artifacts/smyfilesStored.py           |   8 +-
 scripts/artifacts/smyfilescache.py            |   8 +-
 scripts/artifacts/snapchat.py                 |   7 --
 scripts/artifacts/suggestions.py              |   9 +-
 scripts/artifacts/swellbeing.py               |   8 +-
 scripts/artifacts/tangomessage.py             |   8 +-
 scripts/artifacts/teams.py                    |   8 +-
 scripts/artifacts/textnow.py                  |   7 +-
 scripts/artifacts/tikTok.py                   |   8 +-
 scripts/artifacts/torThumbs.py                |   9 +-
 scripts/artifacts/usageapps.py                |   8 +-
 scripts/artifacts/usagestats.py               |   9 +-
 scripts/artifacts/usagestatsVersion.py        |  56 ++++++----
 scripts/artifacts/userDict.py                 |   8 +-
 scripts/artifacts/vaulty_files.py             |   7 --
 scripts/artifacts/vaulty_info.py              |   7 --
 scripts/artifacts/vlcMedia.py                 |  11 +-
 scripts/artifacts/vlcThumbs.py                |   7 +-
 scripts/artifacts/walStrings.py               |   8 +-
 scripts/artifacts/waze.py                     |   6 -
 scripts/artifacts/wellbeing.py                |   8 +-
 scripts/artifacts/wellbeingURLs.py            |   8 +-
 scripts/artifacts/wellbeingaccount.py         |   9 +-
 scripts/artifacts/wifiConfigstore.py          |   9 +-
 scripts/artifacts/wifiHotspot.py              |   9 +-
 scripts/artifacts/wifiProfiles.py             |   8 +-
 scripts/report.py                             |   1 -
 172 files changed, 466 insertions(+), 1216 deletions(-)
 create mode 100644 hook-plugin_loader.py
 create mode 100644 plugin_loader.py

diff --git a/aleapp.py b/aleapp.py
index 4da9370..5d27f62 100644
--- a/aleapp.py
+++ b/aleapp.py
@@ -1,35 +1,40 @@
 import argparse
 import io
-import os
+import os.path
+import typing
+import plugin_loader
 import scripts.report as report
-import shutil
 import traceback
-
 from scripts.search_files import *
 from scripts.ilapfuncs import *
-from scripts.ilap_artifacts import *
 from scripts.version_info import aleapp_version
 from time import process_time, gmtime, strftime
 
+
 def main():
     parser = argparse.ArgumentParser(description='ALEAPP: Android Logs, Events, and Protobuf Parser.')
-    parser.add_argument('-t', choices=['fs','tar','zip', 'gz'], required=False, type=str.lower, action="store", help="Input type (fs = extracted to file system folder)")
+    parser.add_argument('-t', choices=['fs', 'tar', 'zip', 'gz'], required=False, type=str.lower, action="store",
+                        help="Input type (fs = extracted to file system folder)")
     parser.add_argument('-o', '--output_path', required=False, action="store", help='Output folder path')
     parser.add_argument('-i', '--input_path', required=False, action="store", help='Path to input file/folder')
-    parser.add_argument('-p', '--artifact_paths', required=False, action="store_true", help='Text file list of artifact paths')
-    parser.add_argument('-w', '--wrap_text', required=False, action="store_false", help='do not wrap text for output of data files')
+    parser.add_argument('-p', '--artifact_paths', required=False, action="store_true",
+                        help='Text file list of artifact paths')
+    parser.add_argument('-w', '--wrap_text', required=False, action="store_false",
+                        help='do not wrap text for output of data files')
         
     args = parser.parse_args()
-    
-    if args.artifact_paths == True:
+
+    loader = plugin_loader.PluginLoader()
+
+    if args.artifact_paths:
         print('Artifact path list generation started.')
         print('')
-        for key, value in tosearch.items():
-            if type(value[1]) is tuple:
-                for x in value[1]:
+        for plugin in loader.plugins:
+            if isinstance(plugin.search, tuple):
+                for x in plugin.search:
                     print(x)
-            else:
-                print(value[1])
+            else:  # TODO check that this is actually a string?
+                print(plugin.search)
         print('')
         print('Artifact path list generation completed')    
         return
@@ -38,26 +43,26 @@ def main():
         input_path = args.input_path
         extracttype = args.t
 
-        if args.wrap_text == None:
+        if args.wrap_text is None:
             wrap_text = True
         else:
             wrap_text = args.wrap_text 
     
-        if args.output_path == None:
+        if args.output_path is None:
             parser.error('No OUTPUT folder path provided')
             return
         else:
             output_path = os.path.abspath(args.output_path)
         
-        if output_path == None:
+        if output_path is None:
             parser.error('No OUTPUT folder selected. Run the program again.')
             return
             
-        if input_path == None:
+        if input_path is None:
             parser.error('No INPUT file or folder selected. Run the program again.')
             return
         
-        if args.t == None:
+        if args.t is None:
             parser.error('No INPUT file or folder selected. Run the program again.')
             return
 
@@ -77,9 +82,11 @@ def main():
 
         out_params = OutputParameters(output_path)
 
-        crunch_artifacts(tosearch, extracttype, input_path, out_params, 1, wrap_text)
+        crunch_artifacts(list(loader.plugins), extracttype, input_path, out_params, 1, wrap_text)
+
 
-def crunch_artifacts(search_list, extracttype, input_path, out_params, ratio, wrap_text):
+def crunch_artifacts(
+        plugins: typing.Sequence[plugin_loader.PluginSpec], extracttype, input_path, out_params, ratio, wrap_text):
     start = process_time()
 
     logfunc('Procesing started. Please wait. This may take a few minutes...')
@@ -114,39 +121,60 @@ def crunch_artifacts(search_list, extracttype, input_path, out_params, ratio, wr
         return False
 
     # Now ready to run
-    logfunc(f'Artifact categories to parse: {str(len(search_list))}')
+    logfunc(f'Artifact categories to parse: {str(len(plugins))}')
     logfunc(f'File/Directory selected: {input_path}')
     logfunc('\n--------------------------------------------------------------------------------------')
 
     log = open(os.path.join(out_params.report_folder_base, 'Script Logs', 'ProcessedFilesLog.html'), 'w+', encoding='utf8')
-    nl = '\n' #literal in order to have new lines in fstrings that create text files
+    nl = '\n'  # literal in order to have new lines in fstrings that create text files
     log.write(f'Extraction/Path selected: {input_path}<br><br>')
     
     categories_searched = 0
     # Search for the files per the arguments
-    for key, val in search_list.items():
-        search_regexes = []
-        artifact_pretty_name = val[0]
-        if isinstance(val[1], list) or isinstance(val[1], tuple):
-            search_regexes = val[1]
+    for plugin in plugins:
+        artifact_pretty_name = plugin.name
+        if isinstance(plugin.search, list) or isinstance(plugin.search, tuple):
+            search_regexes = plugin.search
         else:
-            search_regexes.append(val[1])
+            search_regexes = [plugin.search]
         files_found = []
         for artifact_search_regex in search_regexes:
             found = seeker.search(artifact_search_regex)
             if not found:
-                logfunc()
-                logfunc(f'No files found for {key} -> {artifact_search_regex}')
-                log.write(f'No files found for {key} -> {artifact_search_regex}<br><br>')
+                #logfunc()
+                #logfunc(f'No files found for {plugin.name} -> {artifact_search_regex}')
+                log.write(f'No files found for {plugin.name} -> {artifact_search_regex}<br><br>')
             else:
+                for pathh in found:
+                    if pathh.startswith('\\\\?\\'):
+                        pathh = pathh[4:]
+<<<<<<< Updated upstream
+=======
+                        #logfunc(f'Files for {artifact_search_regex} located at {pathh}')
+>>>>>>> Stashed changes
+                    log.write(f'Files for {artifact_search_regex} located at {pathh}<br><br>')
                 files_found.extend(found)
         if files_found:
             logfunc()
-            process_artifact(files_found, key, artifact_pretty_name, seeker, out_params.report_folder_base, wrap_text)
-            for pathh in files_found:
-                if pathh.startswith('\\\\?\\'):
-                    pathh = pathh[4:]
-                log.write(f'Files for {artifact_search_regex} located at {pathh}<br><br>')
+            logfunc('{} [{}] artifact started'.format(plugin.name, plugin.module_name))
+            category_folder = os.path.join(out_params.report_folder_base, plugin.category)
+            if not os.path.exists(category_folder):
+                try:
+                    os.mkdir(category_folder)
+                except (FileExistsError, FileNotFoundError) as ex:
+                    logfunc('Error creating {} report directory at path {}'.format(plugin.name, category_folder))
+                    logfunc('Error was {}'.format(str(ex)))
+                    continue  # cannot do work
+            try:
+                plugin.method(files_found, category_folder, seeker, wrap_text)
+            except Exception as ex:
+                logfunc('Reading {} artifact had errors!'.format(plugin.name))
+                logfunc('Error was {}'.format(str(ex)))
+                logfunc('Exception Traceback: {}'.format(traceback.format_exc()))
+                continue  # nope
+
+            logfunc('{} [{}] artifact completed'.format(plugin.name, plugin.module_name))
+
         categories_searched += 1
         GuiWindow.SetProgressBar(categories_searched * ratio)
     log.close()
@@ -154,7 +182,7 @@ def crunch_artifacts(search_list, extracttype, input_path, out_params, ratio, wr
     logfunc('')
     logfunc('Processes completed.')
     end = process_time()
-    run_time_secs =  end - start
+    run_time_secs = end - start
     run_time_HMS = strftime('%H:%M:%S', gmtime(run_time_secs))
     logfunc("Processing time = {}".format(run_time_HMS))
 
@@ -172,5 +200,6 @@ def crunch_artifacts(search_list, extracttype, input_path, out_params, ratio, wr
     logfunc(f'Report location: {out_params.report_folder_base}')
     return True
 
+
 if __name__ == '__main__':
     main()
\ No newline at end of file
diff --git a/aleapp.spec b/aleapp.spec
index 8d09da1..0e1be9b 100644
--- a/aleapp.spec
+++ b/aleapp.spec
@@ -12,7 +12,7 @@ a = Analysis(['aleapp.py'],
                     ('.\\scripts\\feather.min.js', '.\\scripts'),
                     ('.\\scripts\\MDB-Free_4.13.0', '.\\scripts\\MDB-Free_4.13.0')],
              hiddenimports=['simplekml'],
-             hookspath=[],
+             hookspath=['.\\'],
              runtime_hooks=[],
              excludes=[],
              win_no_prefer_redirects=False,
diff --git a/aleappGUI.py b/aleappGUI.py
index 1530ba5..545b775 100644
--- a/aleappGUI.py
+++ b/aleappGUI.py
@@ -1,15 +1,16 @@
+import typing
 import aleapp
-import os
 import PySimpleGUI as sg
-import sys
 import webbrowser
-
+import plugin_loader
 from scripts.ilapfuncs import *
 from scripts.version_info import aleapp_version
 from time import process_time, gmtime, strftime
-from scripts.ilap_artifacts import *
 from scripts.search_files import *
 
+MODULE_START_INDEX = 1000
+
+
 def ValidateInput(values, window):
     '''Returns tuple (success, extraction_type)'''
     global indx
@@ -49,6 +50,7 @@ def ValidateInput(values, window):
 
     return True, ext_type
 
+
 # initialize CheckBox control with module name   
 def CheckList(mtxt, lkey, mdstring, disable=False):
     if mdstring == 'test1' or mdstring == 'test2' : #items in the if are modules that take a long time to run. Deselects them by default.
@@ -57,30 +59,30 @@ def CheckList(mtxt, lkey, mdstring, disable=False):
         dstate = True
     return [sg.CBox(mtxt, default=dstate, key=lkey, metadata=mdstring, disabled=disable)]
 
+
 def pickModules():
     global indx
     global mlist
-    
-    script_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'scripts', 'artifacts')
-
-    # Create sorted dict from 'tosearch' dictionary based on plugin category
-    sorted_tosearch = {k: v for k, v in sorted(tosearch.items(), key=lambda item: item[1][0].upper())}
+    global loader
 
+    loader = plugin_loader.PluginLoader()
 
     indx = MODULE_START_INDEX     # arbitrary number to not interfere with other controls
-    for plugin in sorted(loader.plugins, key=lambda p: p.category.upper()):
+    for plugin in sorted(loader.plugins, key=lambda p: p.name.upper()):
         disabled = plugin.module_name == 'usagestatsVersion'
         mlist.append(CheckList(f'{plugin.category} [{plugin.name} - {plugin.module_name}.py]', indx, plugin.name, disabled))
         indx = indx + 1
-        
+
+
 sg.theme('LightGreen5')   # Add a touch of color
 # All the stuff inside your window.
 
 normal_font = ("Helvetica", 12)
+loader: typing.Optional[plugin_loader.PluginLoader] = None
 mlist = []
 # go through list of available modules and confirm they exist on the disk
 pickModules()
-GuiWindow.progress_bar_total = len(aleapp.tosearch)
+GuiWindow.progress_bar_total = len(loader)
 
 
 layout = [  [sg.Text('Android Logs, Events, And Protobuf Parser', font=("Helvetica", 22))],
@@ -115,11 +117,11 @@ while True:
 
     if event == "SELECT ALL":  
         # mark all modules
-        for x in range(1000,indx):
+        for x in range(MODULE_START_INDEX, indx):
             window[x].Update(True)
     if event == "DESELECT ALL":  
          # none modules
-        for x in range(1000,indx):
+        for x in range(MODULE_START_INDEX, indx):
             window[x].Update(False if window[x].metadata != 'usagestatsVersion' else True)  # usagestatsVersion.py is REQUIRED
     if event == 'Process':
         #check is selections made properly; if not we will return to input form without exiting app altogether
@@ -136,17 +138,19 @@ while True:
                 if output_folder[1] == ':': output_folder = '\\\\?\\' + output_folder.replace('/', '\\')
             
             # re-create modules list based on user selection
-            search_list = { 'usagestatsVersion' : tosearch['usagestatsVersion'] } # hardcode usagestatsVersion as first item
+            #search_list = { 'usagestatsVersion' : tosearch['usagestatsVersion'] } # hardcode usagestatsVersion as first item
+            search_list = [loader['Usage Stats Version']]  # hardcode usagestatsVersion as first item
+
             s_items = 0
-            for x in range(1000,indx):
+            for x in range(MODULE_START_INDEX, indx):
                 if window.FindElement(x).Get():
                     key = window[x].metadata
-                    if (key in tosearch) and (key != 'usagestatsVersion'):
-                        search_list[key] = tosearch[key]
+                    if key in loader and key != 'Usage Stats Version':
+                        search_list.append(loader[key])
                     s_items = s_items + 1 # for progress bar
                 
                 # no more selections allowed
-                window[x].Update(disabled = True)
+                window[x].Update(disabled=True)
                 
             window['SELECT ALL'].update(disabled=True)
             window['DESELECT ALL'].update(disabled=True)
@@ -154,7 +158,8 @@ while True:
             GuiWindow.window_handle = window
             out_params = OutputParameters(output_folder)
             wrap_text = True
-            crunch_successful = aleapp.crunch_artifacts(search_list, extracttype, input_path, out_params, len(aleapp.tosearch)/s_items, wrap_text)
+            crunch_successful = aleapp.crunch_artifacts(
+                search_list, extracttype, input_path, out_params, len(loader)/s_items, wrap_text)
             if crunch_successful:
                 report_path = os.path.join(out_params.report_folder_base, 'index.html')
                     
diff --git a/aleappGUI.spec b/aleappGUI.spec
index f7ad31b..fab6032 100644
--- a/aleappGUI.spec
+++ b/aleappGUI.spec
@@ -3,16 +3,18 @@
 block_cipher = None
 
 a = Analysis(['aleappGUI.py'],
-             pathex=[],
+             pathex=['.\\scripts\\artifacts'],
              binaries=[],
              datas=[('.\\scripts\\logo.jpg', '.\\scripts'),
                     ('.\\scripts\\dashboard.css', '.\\scripts'),
                     ('.\\scripts\\dark-mode.css', '.\\scripts'),
                     ('.\\scripts\\dark-mode-switch.js', '.\\scripts'),
                     ('.\\scripts\\feather.min.js', '.\\scripts'),
-                    ('.\\scripts\\MDB-Free_4.13.0', '.\\scripts\\MDB-Free_4.13.0')],
+                    ('.\\scripts\\MDB-Free_4.13.0', '.\\scripts\\MDB-Free_4.13.0'),
+                    ('.\\scripts\\artifacts', '\\scripts\\artifacts')],
+
              hiddenimports=[],
-             hookspath=[],
+             hookspath=['.\\'],
              runtime_hooks=[],
              excludes=[],
              win_no_prefer_redirects=False,
@@ -34,5 +36,4 @@ exe = EXE(pyz,
           upx=True,
           console=False,
           upx_exclude=[],
-          runtime_tmpdir=None,
-          console=False )
+          runtime_tmpdir=None )
diff --git a/hook-plugin_loader.py b/hook-plugin_loader.py
new file mode 100644
index 0000000..b2c206f
--- /dev/null
+++ b/hook-plugin_loader.py
@@ -0,0 +1,24 @@
+import plugin_loader
+
+# Hey PyInstaller? Yeah you! Take a look at these plugins! I know they're not actually imported anywhere but you
+# better believe that they will be a runtime, so, if you wouldn't mind, it'd be fantastic if you pretended that
+# they're imported normally and pick up *their* imports. OK? Great. Fantastic.
+
+print("Hooking plugins for pyinstaller")
+
+loader = plugin_loader.PluginLoader()
+
+tmp = []
+
+for py_file in plugin_loader.PLUGINPATH.glob("*.py"):
+    mod = plugin_loader.PluginLoader.load_module_lazy(py_file)
+    try:
+        mod_artifacts = mod.__artifacts__
+    except AttributeError:
+        pass  # any unconverted plugins still get checked out so they don't break the loader during runtime
+
+    tmp.append("scripts.artifacts." + mod.__name__)  # TODO this is a hack, if we ever move plugins this breaks
+
+print(f"{len(tmp)} plugins loaded as hidden imports")
+
+hiddenimports = list(tmp)
diff --git a/plugin_loader.py b/plugin_loader.py
new file mode 100644
index 0000000..0d51983
--- /dev/null
+++ b/plugin_loader.py
@@ -0,0 +1,65 @@
+import pathlib
+import dataclasses
+import typing
+import importlib.util
+
+#PLUGINPATH = pathlib.Path("./scripts/artifacts")
+# a bit long-winded to make compatible with PyInstaller
+PLUGINPATH = pathlib.Path(__file__).resolve().parent / pathlib.Path("scripts/artifacts")
+
+
+@dataclasses.dataclass(frozen=True)
+class PluginSpec:
+    name: str
+    module_name: str
+    category: str
+    search: str
+    method: typing.Callable  # todo define callable signature
+
+
+class PluginLoader:
+    def __init__(self, plugin_path: typing.Optional[pathlib.Path] = None):
+        self._plugin_path = plugin_path or PLUGINPATH
+        self._plugins: dict[str, PluginSpec] = {}
+        self._load_plugins()
+
+    @staticmethod
+    def load_module_lazy(path: pathlib.Path):
+        spec = importlib.util.spec_from_file_location(path.stem, path)
+        loader = importlib.util.LazyLoader(spec.loader)
+        spec.loader = loader
+        mod = importlib.util.module_from_spec(spec)
+        loader.exec_module(mod)
+        return mod
+
+    def _load_plugins(self):
+        for py_file in self._plugin_path.glob("*.py"):
+            mod = PluginLoader.load_module_lazy(py_file)
+            try:
+                mod_artifacts = mod.__artifacts__
+            except AttributeError:
+                continue  # no artifacts defined in this plugin
+
+            for name, (category, search, func) in mod_artifacts.items():
+                #self._plugins.append(PluginSpec(name, search, func))
+                if name in self._plugins:
+                    raise KeyError("Duplicate plugin")
+                self._plugins[name] = PluginSpec(name, py_file.stem, category, search, func)
+
+    @property
+    def plugins(self) -> typing.Iterable[PluginSpec]:
+        yield from self._plugins.values()
+
+    def __getitem__(self, item: str) -> PluginSpec:
+        return self._plugins[item]
+
+    def __contains__(self, item):
+        return item in self._plugins
+
+    def __len__(self):
+        return len(self._plugins)
+
+
+
+
+
diff --git a/scripts/artifacts/AVG.py b/scripts/artifacts/AVG.py
index 1ad9e6b..1b94547 100644
--- a/scripts/artifacts/AVG.py
+++ b/scripts/artifacts/AVG.py
@@ -317,11 +317,4 @@ def get_AVG(files_found, report_folder, seeker, wrap_text):
         tsvname = f'AVG - Media Files'
         tsv(report_folder, data_headers, media_data_list, tsvname)                  
     else:
-        logfunc('No files found to decrypt')
-        
-__artifacts__ = {
-        "AVG": (
-                "Encrypting Media Apps",
-                ('*/data/data/com.antivirus/shared_prefs/PinSettingsImpl.xml', '*/Vault/*'),
-                get_AVG)
-}
\ No newline at end of file
+        logfunc('No files found to decrypt')
\ No newline at end of file
diff --git a/scripts/artifacts/BashHistory.py b/scripts/artifacts/BashHistory.py
index 7bf4f48..0571356 100644
--- a/scripts/artifacts/BashHistory.py
+++ b/scripts/artifacts/BashHistory.py
@@ -25,11 +25,4 @@ def get_BashHistory(files_found, report_folder, seeker, wrap_text):
         tsv(report_folder, data_headers, data_list, tsvname)
         
     else:
-        logfunc(f'No Bash History file available')
-    
-__artifacts__ = {
-        "Bash History": (
-                "Bash History",
-                ('**/.bash_history'),
-                get_BashHistory)
-}
\ No newline at end of file
+        logfunc(f'No Bash History file available')
\ No newline at end of file
diff --git a/scripts/artifacts/Cast.py b/scripts/artifacts/Cast.py
index 2fe3697..acffa3e 100644
--- a/scripts/artifacts/Cast.py
+++ b/scripts/artifacts/Cast.py
@@ -62,10 +62,4 @@ def get_Cast(files_found, report_folder, seeker, wrap_text):
         logfunc('No Cast data available')
     
     db.close()
-
-__artifacts__ = {
-        "Cast": (
-                "Cast",
-                ('*/com.google.android.gms/databases/cast.db'),
-                get_Cast)
-}
+    return
diff --git a/scripts/artifacts/Cello.py b/scripts/artifacts/Cello.py
index 9fa41e8..2c23cda 100644
--- a/scripts/artifacts/Cello.py
+++ b/scripts/artifacts/Cello.py
@@ -132,10 +132,4 @@ def get_Cello(files_found, report_folder, seeker, wrap_text):
         logfunc('No Google Drive - Cello data available')
     
     db.close()
-
-__artifacts__ = {
-        "Cello": (
-                "Google Drive",
-                ('*/com.google.android.apps.docs/app_cello/*/cello.db*', '*/com.google.android.apps.docs/files/shiny_blobs/blobs/*'),
-                get_Cello)
-}
+    return
diff --git a/scripts/artifacts/ChessComAccount.py b/scripts/artifacts/ChessComAccount.py
index c982a08..3ea15ee 100644
--- a/scripts/artifacts/ChessComAccount.py
+++ b/scripts/artifacts/ChessComAccount.py
@@ -48,11 +48,5 @@ def get_ChessComAccount(files_found, report_folder, seeker, wrap_text):
     
     tsv(report_folder, data_headers, data_list, title)
 
-__artifacts__ = {
-        "ChessComAcct": (
-                "Chess.com",
-                ('*/data/data/com.chess/shared_prefs/com.chess.app.login_credentials.xml', '*/data/data/com.chess/shared_prefs/com.chess.app.session_preferences.xml'),
-                get_ChessComAccount)
-}
- 
+
 
diff --git a/scripts/artifacts/ChessComFriends.py b/scripts/artifacts/ChessComFriends.py
index 964f119..ff41980 100644
--- a/scripts/artifacts/ChessComFriends.py
+++ b/scripts/artifacts/ChessComFriends.py
@@ -31,10 +31,5 @@ def get_ChessComFriends(files_found, report_folder, seeker, wrap_text):
     
     tsv(report_folder, data_headers, data_list, title)
 
-__artifacts__ = {
-        "ChessComFriends": (
-                "Chess.com",
-                ('*/data/data/com.chess/databases/chess-database*'),
-                get_ChessComFriends)
-}
+
 
diff --git a/scripts/artifacts/ChessComGames.py b/scripts/artifacts/ChessComGames.py
index 9be9f3a..56b6302 100644
--- a/scripts/artifacts/ChessComGames.py
+++ b/scripts/artifacts/ChessComGames.py
@@ -43,11 +43,5 @@ def get_ChessComGames(files_found, report_folder, seeker, wrap_text):
     
     tsv(report_folder, data_headers, data_list, title)
 
-__artifacts__ = {
-        "ChessComGames": (
-                "Chess.com",
-                ('*/data/data/com.chess/databases/chess-database*', '*/data/data/com.chess/shared_prefs/com.chess.app.session_preferences.xml'),
-                get_ChessComGames)
-}
 
 
diff --git a/scripts/artifacts/ChessComMessages.py b/scripts/artifacts/ChessComMessages.py
index b9e2685..7ee4bb7 100644
--- a/scripts/artifacts/ChessComMessages.py
+++ b/scripts/artifacts/ChessComMessages.py
@@ -31,10 +31,5 @@ def get_ChessComMessages(files_found, report_folder, seeker, wrap_text):
     
     tsv(report_folder, data_headers, data_list, title)
 
-__artifacts__ = {
-        "ChessComMessages": (
-                "Chess.com",
-                ('*/data/data/com.chess/databases/chess-database*'),
-                get_ChessComMessages)
-}
+
 
diff --git a/scripts/artifacts/ChessWithFriends.py b/scripts/artifacts/ChessWithFriends.py
index 2b5e229..aa360a1 100644
--- a/scripts/artifacts/ChessWithFriends.py
+++ b/scripts/artifacts/ChessWithFriends.py
@@ -46,10 +46,5 @@ def get_ChessWithFriends(files_found, report_folder, seeker, wrap_text):
         logfunc('No Chess With Friends data available')
     
     db.close()
-    
-__artifacts__ = {
-        "ChessWithFriends": (
-                "Chats",
-                ('*/data/data/com.zynga.chess.googleplay/databases/wf_database.sqlite', '*/data/data/com.zynga.chess.googleplay/db/wf_database.sqlite'),
-                get_ChessWithFriends)
-}
+    return
+
diff --git a/scripts/artifacts/DocList.py b/scripts/artifacts/DocList.py
index 7be96b0..167a61b 100644
--- a/scripts/artifacts/DocList.py
+++ b/scripts/artifacts/DocList.py
@@ -62,10 +62,4 @@ def get_DocList(files_found, report_folder, seeker, wrap_text):
         logfunc('No Google Drive - DocList data available')
     
     db.close()
-
-__artifacts__ = {
-        "DocList'": (
-                "Google Drive",
-                ('*/data/data/com.google.android.apps.docs/databases/DocList.db*'),
-                get_DocList)
-}
+    return
diff --git a/scripts/artifacts/FacebookMessenger.py b/scripts/artifacts/FacebookMessenger.py
index 609af25..3b88194 100644
--- a/scripts/artifacts/FacebookMessenger.py
+++ b/scripts/artifacts/FacebookMessenger.py
@@ -205,10 +205,5 @@ def get_FacebookMessenger(files_found, report_folder, seeker, wrap_text):
             logfunc(f'No Facebook{typeof}- Contacts data available{usernum}')
         
         db.close()
-        
-__artifacts__ = {
-        "FacebookMessenger": (
-                "Facebook Messenger",
-                ('*/threads_db2*'),
-                get_FacebookMessenger)
-}
\ No newline at end of file
+
+        
\ No newline at end of file
diff --git a/scripts/artifacts/FilesByGoogle_FilesMaster.py b/scripts/artifacts/FilesByGoogle_FilesMaster.py
index 65ae767..c641cfa 100644
--- a/scripts/artifacts/FilesByGoogle_FilesMaster.py
+++ b/scripts/artifacts/FilesByGoogle_FilesMaster.py
@@ -60,16 +60,8 @@ def get_FilesByGoogle_FilesMaster(files_found, report_folder, seeker, wrap_text)
             
             tlactivity = f'Files By Google - Files Master'
             timeline(report_folder, tlactivity, data_list, data_headers)
-            
-            db.close()
         else:
             logfunc('No Files By Google - Files Master data available')
-            db.close()
     
-
-__artifacts__ = {
-        "FilesMaster": (
-                "Files by Google",
-                ('*/com.google.android.apps.nbu.files/databases/files_master_database*'),
-                get_FilesByGoogle_FilesMaster)
-}
+    db.close()
+    return
diff --git a/scripts/artifacts/FilesByGoogle_SearchHistory.py b/scripts/artifacts/FilesByGoogle_SearchHistory.py
index 9b76c4f..cab7c3c 100644
--- a/scripts/artifacts/FilesByGoogle_SearchHistory.py
+++ b/scripts/artifacts/FilesByGoogle_SearchHistory.py
@@ -42,14 +42,8 @@ def get_FilesByGoogle_SearchHistory(files_found, report_folder, seeker, wrap_tex
             
             tlactivity = f'Files By Google - Search History'
             timeline(report_folder, tlactivity, data_list, data_headers)
-            db.close()
         else:
             logfunc('No Files By Google - Search History data available')
-            db.close()
-
-__artifacts__ = {
-        "FilesSearchHist": (
-                "Files by Google",
-                ('*/com.google.android.apps.nbu.files/databases/search_history_database*'),
-                get_FilesByGoogle_SearchHistory)
-}
\ No newline at end of file
+    
+    db.close()
+    return
diff --git a/scripts/artifacts/HideX.py b/scripts/artifacts/HideX.py
index 21d46ac..d5ad79a 100644
--- a/scripts/artifacts/HideX.py
+++ b/scripts/artifacts/HideX.py
@@ -43,10 +43,4 @@ def get_HideX(files_found, report_folder, seeker, wrap_text):
         logfunc('No HideX data available')
     
     db.close()
-
-__artifacts__ = {
-        "HideX": (
-                "GroupMe",
-                ('*/com.flatfish.cal.privacy/databases/hidex.db*'),
-                get_HideX)
-}
+    return
diff --git a/scripts/artifacts/NQVault.py b/scripts/artifacts/NQVault.py
index 21ca945..273bd6c 100644
--- a/scripts/artifacts/NQVault.py
+++ b/scripts/artifacts/NQVault.py
@@ -190,11 +190,6 @@ def get_NQVault(files_found, report_folder, seeker, wrap_text):
             logfunc('No Encrypted Media Present in Database.')
             return
 
-__artifacts__ = {
-        "NQVault": (
-                "Encrypting Media apps",
-                ('*/emulated/0/Android/data/com.netqin.ps/files/Documents/SystemAndroid/Data/322w465ay423xy11', '*/SystemAndroid/Data/*'),
-                get_NQVault)
-}
+
 
 
diff --git a/scripts/artifacts/Oruxmaps.py b/scripts/artifacts/Oruxmaps.py
index f302011..e19a215 100644
--- a/scripts/artifacts/Oruxmaps.py
+++ b/scripts/artifacts/Oruxmaps.py
@@ -69,10 +69,4 @@ def get_Oruxmaps(files_found, report_folder, seeker, wrap_text):
         logfunc('No Oruxmaps Tracks data available')
 
     db.close()
-
-__artifacts__ = {
-        "Oruxmaps": (
-                "GEO Location",
-                ('**/oruxmaps/tracklogs/oruxmapstracks.db*'),
-                get_Oruxmaps)
-}
+    return
\ No newline at end of file
diff --git a/scripts/artifacts/Turbo_AppUsage.py b/scripts/artifacts/Turbo_AppUsage.py
index 3d6bc13..96aecfe 100644
--- a/scripts/artifacts/Turbo_AppUsage.py
+++ b/scripts/artifacts/Turbo_AppUsage.py
@@ -43,11 +43,4 @@ def get_Turbo_AppUsage(files_found, report_folder, seeker, wrap_text):
         tlactivity = f'Turbo - Application Usage'
         timeline(report_folder, tlactivity, data_list, data_headers)
     else:
-        logfunc(f'No Turbo - Application Usage data available')
-
-__artifacts__ = {
-        "Turbo_AppUsage": (
-                "Device Health Services",
-                ('*/com.google.android.apps.turbo/shared_prefs/app_usage_stats.xml'),
-                get_Turbo_AppUsage)
-}
\ No newline at end of file
+        logfunc(f'No Turbo - Application Usage data available')
\ No newline at end of file
diff --git a/scripts/artifacts/Turbo_Battery.py b/scripts/artifacts/Turbo_Battery.py
index 4eded5d..7bbda53 100644
--- a/scripts/artifacts/Turbo_Battery.py
+++ b/scripts/artifacts/Turbo_Battery.py
@@ -111,10 +111,4 @@ def get_Turbo_Battery(files_found, report_folder, seeker, wrap_text):
         logfunc('No Turbo - Bluetooth Device Info data available')
     
     db.close()
-
-__artifacts__ = {
-        "Turbo_Battery": (
-                "Device Health Services",
-                ('*/com.google.android.apps.turbo/databases/turbo.db*','*/com.google.android.apps.turbo/databases/bluetooth.db*'),
-                get_Turbo_Battery)
-}
\ No newline at end of file
+    return
diff --git a/scripts/artifacts/Viber.py b/scripts/artifacts/Viber.py
index cf0ef8b..a3e864f 100644
--- a/scripts/artifacts/Viber.py
+++ b/scripts/artifacts/Viber.py
@@ -211,9 +211,4 @@ def get_Viber(files_found, report_folder, seeker, wrap_text):
 
     db.close()
 
-__artifacts__ = {
-  "Viber": (
-    "Viber",
-    ('*/com.viber.voip/databases/*'),
-    get_Viber)
-}
\ No newline at end of file
+    return
\ No newline at end of file
diff --git a/scripts/artifacts/WhatsApp.py b/scripts/artifacts/WhatsApp.py
index 1a91bdc..8a9e056 100644
--- a/scripts/artifacts/WhatsApp.py
+++ b/scripts/artifacts/WhatsApp.py
@@ -459,10 +459,4 @@ def get_WhatsApp(files_found, report_folder, seeker, wrap_text):
                     timeline(report_folder, tlactivity, data_list, data_headers)
                 else:
                     logfunc("No WhatsApp - Profile data found")
-
-__artifacts__ = {
-    "WhatsApp": (
-        "WhatsApp",
-        ('*/com.whatsapp/databases/*.db*','**/com.whatsapp/shared_prefs/com.whatsapp_preferences_light.xml','*/WhatsApp Images/*.*','*/WhatsApp Video/*.*'),
-        get_WhatsApp)
-}
+    return 
diff --git a/scripts/artifacts/WordsWithFriends.py b/scripts/artifacts/WordsWithFriends.py
index 0e0787e..6b9bfa7 100644
--- a/scripts/artifacts/WordsWithFriends.py
+++ b/scripts/artifacts/WordsWithFriends.py
@@ -49,10 +49,4 @@ def get_WordsWithFriends(files_found, report_folder, seeker, wrap_text):
         logfunc('No Words With Friends data available')
     
     db.close()
-
-__artifacts__ = {
-        "WordsWithFriends": (
-                "Chats",
-                ('*/com.zynga.words/db/wf_database.sqlite'),
-                get_WordsWithFriends)
-}
\ No newline at end of file
+    return
diff --git a/scripts/artifacts/Xender.py b/scripts/artifacts/Xender.py
index 946f5e6..6003e31 100644
--- a/scripts/artifacts/Xender.py
+++ b/scripts/artifacts/Xender.py
@@ -89,10 +89,4 @@ def get_Xender(files_found, report_folder, seeker, wrap_text):
         logfunc('No Xender file transfer messages data available')
 
     db.close()
-
-__artifacts__ = {
-        "Xender": (
-                "File Transfer",
-                ('*/cn.xender/databases/trans-history-db*'),
-                get_Xender)
-}
\ No newline at end of file
+    return
\ No newline at end of file
diff --git a/scripts/artifacts/Zapya.py b/scripts/artifacts/Zapya.py
index 2e54482..fd28f81 100644
--- a/scripts/artifacts/Zapya.py
+++ b/scripts/artifacts/Zapya.py
@@ -47,10 +47,4 @@ def get_Zapya(files_found, report_folder, seeker, wrap_text):
         logfunc('No Zapya data available')
     
     db.close()
-
-__artifacts__ = {
-        "Zapya": (
-                "File Transfer",
-                ('*/com.dewmobile.kuaiya.play/databases/transfer20.db*'),
-                get_Zapya)
-}
\ No newline at end of file
+    return
\ No newline at end of file
diff --git a/scripts/artifacts/accounts_ce.py b/scripts/artifacts/accounts_ce.py
index b1e5971..a341f33 100644
--- a/scripts/artifacts/accounts_ce.py
+++ b/scripts/artifacts/accounts_ce.py
@@ -56,5 +56,12 @@ def process_accounts_ce(folder, uid, report_folder):
         tsvname = f'accounts ce {uid}'
         tsv(report_folder, data_headers, data_list, tsvname)
     else:
-        logfunc(f'No accounts_ce_{uid} data available')    
-    db.close()
\ No newline at end of file
+        logfunc(f'No accounts_ce_{uid} data available')
+    db.close()
+    
+__artifacts__ = {
+        "Accounts_ce": (
+                "Accounts_ce",
+                ('*/data/system_ce/*/accounts_ce.db'),
+                get_accounts_ce)
+}
\ No newline at end of file
diff --git a/scripts/artifacts/accounts_ce_authtokens.py b/scripts/artifacts/accounts_ce_authtokens.py
index 23ad846..ec6b060 100644
--- a/scripts/artifacts/accounts_ce_authtokens.py
+++ b/scripts/artifacts/accounts_ce_authtokens.py
@@ -60,4 +60,11 @@ def process_accounts_ce_authtokens(folder, uid, report_folder):
         tsv(report_folder, data_headers, data_list, tsvname)
     else:
         logfunc(f'No Authtokens_{uid} data available')    
-    db.close()
\ No newline at end of file
+    db.close()
+    
+__artifacts__ = {
+        "Accounts_ce authtokens": (
+                "Accounts_ce",
+                ('*/data/system_ce/*/accounts_ce.db'),
+                get_accounts_ce_authtokens)
+}
\ No newline at end of file
diff --git a/scripts/artifacts/accounts_de.py b/scripts/artifacts/accounts_de.py
index cb4bfdb..068ad74 100644
--- a/scripts/artifacts/accounts_de.py
+++ b/scripts/artifacts/accounts_de.py
@@ -60,4 +60,12 @@ def process_accounts_de(folder, uid, report_folder):
         timeline(report_folder, tlactivity, data_list, data_headers)
     else:
         logfunc(f'No accounts_de_{uid} data available')    
-    db.close()
\ No newline at end of file
+    db.close()
+    
+    
+__artifacts__ = {
+        "Accounts_de": (
+                "Accounts_de",
+                ('*/data/system_de/*/accounts_de.db'),
+                get_accounts_de)
+}
\ No newline at end of file
diff --git a/scripts/artifacts/adb_hosts.py b/scripts/artifacts/adb_hosts.py
index 50b771e..bae6df0 100644
--- a/scripts/artifacts/adb_hosts.py
+++ b/scripts/artifacts/adb_hosts.py
@@ -24,10 +24,10 @@ def get_adb_hosts(files_found, report_folder, seeker, wrap_text):
         
     else:
         logfunc(f'No ADB Hosts file available')
-
-__artifacts__ = {
-        "adb hosts": (
-                "Adb Hosts",
-                ('*/data/misc/adb/adb_keys'),
-                get_adb_hosts)
+
+__artifacts__ = {
+        "Adb hosts": (
+                "adb hosts",
+                ('*/data/misc/adb/adb_keys'),
+                get_adb_hosts)
 }
\ No newline at end of file
diff --git a/scripts/artifacts/airGuard.py b/scripts/artifacts/airGuard.py
index 6cf7911..5457c42 100644
--- a/scripts/artifacts/airGuard.py
+++ b/scripts/artifacts/airGuard.py
@@ -54,4 +54,9 @@ def get_airGuard(files_found, report_folder, seeker, wrap_text):
         
     db.close()
 
-    
\ No newline at end of file
+__artifacts__ = {
+        "AirGuard": (
+                "AirTags",
+                ('*/data/de.seemoo.at_tracking_detection.release/databases/attd_db'),
+                get_airGuard)
+}
\ No newline at end of file
diff --git a/scripts/artifacts/appLockerfishingnet.py b/scripts/artifacts/appLockerfishingnet.py
index 4a44fe8..112cf7c 100644
--- a/scripts/artifacts/appLockerfishingnet.py
+++ b/scripts/artifacts/appLockerfishingnet.py
@@ -83,4 +83,11 @@ def get_appLockerfishingnet(files_found, report_folder, seeker, wrap_text):
             
             
         else:
-            logfunc('No Calculator Locker data available')
\ No newline at end of file
+            logfunc('No Calculator Locker data available')
+
+__artifacts__ = {
+        "App Locker": (
+                "Encrypting Media Apps",
+                ('*/.privacy_safe/picture/*', '*/.privacy_safe/video/*'),
+                get_appLockerfishingnet)
+}
\ No newline at end of file
diff --git a/scripts/artifacts/appLockerfishingnetdb.py b/scripts/artifacts/appLockerfishingnetdb.py
index ea91279..4792024 100644
--- a/scripts/artifacts/appLockerfishingnetdb.py
+++ b/scripts/artifacts/appLockerfishingnetdb.py
@@ -28,11 +28,4 @@ def get_appLockerfishingnetdb(files_found, report_folder, seeker, wrap_text):
             
             
         else:
-            logfunc('No Calculator Locker Database data available')
-            
-__artifacts__ = {
-        "App Locker DB": (
-                "Encrypting Media Apps",
-                ('*/.privacy_safe/db/privacy_safe.db'),
-                get_appLockerfishingnetdb)
-}
\ No newline at end of file
+            logfunc('No Calculator Locker Database data available')
\ No newline at end of file
diff --git a/scripts/artifacts/appLockerfishingnetpat.py b/scripts/artifacts/appLockerfishingnetpat.py
index 02a8784..3372745 100644
--- a/scripts/artifacts/appLockerfishingnetpat.py
+++ b/scripts/artifacts/appLockerfishingnetpat.py
@@ -37,11 +37,4 @@ def get_appLockerfishingnetpat(files_found, report_folder, seeker, wrap_text):
             
             
         else:
-            logfunc('No Calculator Locker Pattern data available')
-            
-__artifacts__ = {
-        "App Locker Pat": (
-                "Encrypting Media Apps",
-                ('*/data/com.hld.anzenbokusufake/shared_prefs/share_privacy_safe.xml'),
-                get_appLockerfishingnetpat)
-}
\ No newline at end of file
+            logfunc('No Calculator Locker Pattern data available')
\ No newline at end of file
diff --git a/scripts/artifacts/appicons.py b/scripts/artifacts/appicons.py
index 236421a..8b91cba 100644
--- a/scripts/artifacts/appicons.py
+++ b/scripts/artifacts/appicons.py
@@ -96,4 +96,10 @@ def get_appicons(files_found, report_folder, seeker, wrap_text):
                 data_list.append(( escape(app.name), escape(app.package), main_icon_html, other_icons_html ))
             report.write_artifact_data_table(data_headers, data_list, file_found, html_escape=False)
             report.end_artifact_report()
-            return
\ No newline at end of file
+
+__artifacts__ = {
+        "App Icons": (
+                "Installed Apps",
+                ('*/data/com.google.android.apps.nexuslauncher/databases/app_icons.db*'),
+                get_appicons)
+}
\ No newline at end of file
diff --git a/scripts/artifacts/appopSetupWiz.py b/scripts/artifacts/appopSetupWiz.py
index 1feb2eb..bd2fafd 100644
--- a/scripts/artifacts/appopSetupWiz.py
+++ b/scripts/artifacts/appopSetupWiz.py
@@ -48,11 +48,4 @@ def get_appopSetupWiz(files_found, report_folder, seeker, wrap_text):
             tlactivity = f'Appops Setup Wizard data'
             timeline(report_folder, tlactivity, data_list, data_headers)
         else:
-            logfunc('No Appops Setup Wizard data available')
-
-__artifacts__ = {
-        "appopSetupWiz": (
-                "Wipe & Setup",
-                ('*/data/system/appops.xml'),
-                get_appopSetupWiz)
-}
\ No newline at end of file
+            logfunc('No Appops Setup Wizard data available')
\ No newline at end of file
diff --git a/scripts/artifacts/appops.py b/scripts/artifacts/appops.py
index 583f33c..4c8105e 100644
--- a/scripts/artifacts/appops.py
+++ b/scripts/artifacts/appops.py
@@ -68,11 +68,4 @@ def get_appops(files_found, report_folder, seeker, wrap_text):
             tlactivity = f'Appops.xml data'
             timeline(report_folder, tlactivity, data_list, data_headers)
         else:
-            logfunc('No Appops.xml data available')
-            
-__artifacts__ = {
-        "appops": (
-                "Permissions",
-                ('*/data/system/appops.xml'),
-                get_appops)
-}
\ No newline at end of file
+            logfunc('No Appops.xml data available')
\ No newline at end of file
diff --git a/scripts/artifacts/atrackerdetect.py b/scripts/artifacts/atrackerdetect.py
index 505817b..37ed6fc 100644
--- a/scripts/artifacts/atrackerdetect.py
+++ b/scripts/artifacts/atrackerdetect.py
@@ -35,11 +35,4 @@ def get_atrackerdetect(files_found, report_folder, seeker, wrap_text):
             tsv(report_folder, data_headers, data_list, tsvname)
             
         else:
-            logfunc('No Apple Tracker Detect Prefs data available')
-
-__artifacts__ = {
-        "atrackerdetect": (
-                "AirTags",
-                ('*/data/com.apple.trackerdetect/shared_prefs/com.apple.trackerdetect_preferences.xml'),
-                get_atrackerdetect)
-}
\ No newline at end of file
+            logfunc('No Apple Tracker Detect Prefs data available')
\ No newline at end of file
diff --git a/scripts/artifacts/battery_usage_v4.py b/scripts/artifacts/battery_usage_v4.py
index e87b2e6..258cc7d 100644
--- a/scripts/artifacts/battery_usage_v4.py
+++ b/scripts/artifacts/battery_usage_v4.py
@@ -59,10 +59,4 @@ def get_battery_usage_v4(files_found, report_folder, seeker, wrap_text):
         logfunc('No Settings Services - Battery Usage data available')
     
     db.close()
-
-__artifacts__ = {
-        "battery_usage_v4": (
-                "Settings Services",
-                ('**/com.google.android.settings.intelligence/databases/battery-usage-db-v4*'),
-                get_battery_usage_v4)
-}
\ No newline at end of file
+    return
diff --git a/scripts/artifacts/bluetoothConnections.py b/scripts/artifacts/bluetoothConnections.py
index 9c53523..49a0457 100644
--- a/scripts/artifacts/bluetoothConnections.py
+++ b/scripts/artifacts/bluetoothConnections.py
@@ -93,10 +93,4 @@ def get_bluetoothConnections(files_found, report_folder, seeker, wrap_text):
         tsv(report_folder, data_headers, data_list, tsvname)
     else:
         logfunc(f'No Bluetooth Adapter Information data available')
-
-__artifacts__ = {
-        "Bluetooth Connections": (
-                "Bluetooth Connections",
-                ('*/data/misc/bluedroid/bt_config.conf'),
-                get_bluetoothConnections)
-}
\ No newline at end of file
+                    
\ No newline at end of file
diff --git a/scripts/artifacts/browserlocation.py b/scripts/artifacts/browserlocation.py
index de72f32..32a4a2b 100644
--- a/scripts/artifacts/browserlocation.py
+++ b/scripts/artifacts/browserlocation.py
@@ -49,11 +49,4 @@ def get_browserlocation(files_found, report_folder, seeker, wrap_text):
             logfunc('No Browser Locations found')
             
         db.close()
-        
-__artifacts__ = {
-        "Browser Location": (
-                "GEO Location",
-                ('**/com.android.browser/app_geolocation/CachedGeoposition.db'),
-                get_browserlocation)
-}
     
\ No newline at end of file
diff --git a/scripts/artifacts/build.py b/scripts/artifacts/build.py
index abe152f..b3900d8 100644
--- a/scripts/artifacts/build.py
+++ b/scripts/artifacts/build.py
@@ -67,10 +67,4 @@ def get_build(files_found, report_folder, seeker, wrap_text):
         tsv(report_folder, data_headers, data_list, tsvname)
     else:
         logfunc(f'No Build Info data available')    
-
-__artifacts__ = {
-        "Build": (
-                "Device Info",
-                ('*/vendor/build.prop'),
-                get_build)
-}
\ No newline at end of file
+   
\ No newline at end of file
diff --git a/scripts/artifacts/burner.py b/scripts/artifacts/burner.py
index 3c9bc53..5977768 100644
--- a/scripts/artifacts/burner.py
+++ b/scripts/artifacts/burner.py
@@ -39,7 +39,7 @@ def get_burner(files_found, report_folder, seeker, wrap_text):
         all_rows = cursor.fetchall()
         usageentries = len(all_rows)
         if usageentries > 0:
-            #logfunc(str(all_rows))
+            logfunc(str(all_rows))
             report = ArtifactHtmlReport('Number Information')
             report.start_artifact_report(report_folder, 'Number Information')
             report.add_script()
@@ -106,11 +106,4 @@ def get_burner(files_found, report_folder, seeker, wrap_text):
         else:
             logfunc('No Burner Communication Information data available')
                 
-        db.close()
-        
-__artifacts__ = {
-        "Burner": (
-                "Burner",
-                ('*/com.adhoclabs.burner/databases/burners.db'),
-                get_burner)
-}
\ No newline at end of file
+        db.close()
\ No newline at end of file
diff --git a/scripts/artifacts/cachelocation.py b/scripts/artifacts/cachelocation.py
index cbc193b..e64936d 100644
--- a/scripts/artifacts/cachelocation.py
+++ b/scripts/artifacts/cachelocation.py
@@ -37,7 +37,7 @@ def get_cachelocation(files_found, report_folder, seeker, wrap_text):
             report = ArtifactHtmlReport('Cache Locations')
             report.start_artifact_report(report_folder, 'Cache Locations')
             report.add_script()
-            data_headers = ('Accuracy', 'Confidence', 'Latitude', 'Longitude', 'Readtime') # Don't remove the comma, that is required to make this a tuple as there is only 1 element
+            data_headers = ('accuracy', 'confidence', 'latitude', 'longitude', 'readtime') # Don't remove the comma, that is required to make this a tuple as there is only 1 element
 
             report.write_artifact_data_table(data_headers, data_list, file_found)
             report.end_artifact_report()
@@ -51,9 +51,3 @@ def get_cachelocation(files_found, report_folder, seeker, wrap_text):
         else:
             logfunc('No Cachelocation Logs found')
 
-__artifacts__ = {
-        "Cache Location": (
-                "GEO Location",
-                ('*/com.google.android.location/files/cache.cell/cache.cell', '*/com.google.android.location/files/cache.wifi/cache.wifi'),
-                get_cachelocation)
-}
\ No newline at end of file
diff --git a/scripts/artifacts/calllog.py b/scripts/artifacts/calllog.py
index 3c221f8..979d208 100644
--- a/scripts/artifacts/calllog.py
+++ b/scripts/artifacts/calllog.py
@@ -84,10 +84,4 @@ def get_calllog(files_found, report_folder, seeker, wrap_text):
         logfunc('No Call Log data available')
     
     db.close()
-
-__artifacts__ = {
-        "Call logs ": (
-                "Call Logs",
-                ('*/data/com.android.providers.contacts/databases/calllog.db'),
-                get_calllog)
-}
\ No newline at end of file
+    return
\ No newline at end of file
diff --git a/scripts/artifacts/calllogs.py b/scripts/artifacts/calllogs.py
index 0e47891..f07a2e8 100644
--- a/scripts/artifacts/calllogs.py
+++ b/scripts/artifacts/calllogs.py
@@ -75,6 +75,14 @@ def get_calllogs(files_found, report_folder, seeker, wrap_text):
             logfunc('No Call Logs found')
             
 
-        db.close
+        db.close()
     
-    return
\ No newline at end of file
+    return
+
+# 'calllogs':('Call Logs', ('**/com.android.providers.contacts/databases/contact*', '**/com.sec.android.provider.logsprovider/databases/logs.db*')),
+__artifacts__ = {
+    "Call Logs":(
+        "Call Logs",
+        ('**/com.android.providers.contacts/databases/contact*', '**/com.sec.android.provider.logsprovider/databases/logs.db*'),
+        get_calllogs)
+}
diff --git a/scripts/artifacts/cashApp.py b/scripts/artifacts/cashApp.py
index d8437e2..6eac99f 100644
--- a/scripts/artifacts/cashApp.py
+++ b/scripts/artifacts/cashApp.py
@@ -53,11 +53,5 @@ def get_cashApp(files_found, report_folder, seeker, wrap_text):
         logfunc('No Cash App Transactions data available')
     
     db.close()
-
-__artifacts__ = {
-        "Cash App": (
-                "Cash App",
-                ('*/data/data/com.squareup.cash/databases/cash_money.db*'),
-                get_cashApp)
-}
+    return
 
diff --git a/scripts/artifacts/chrome.py b/scripts/artifacts/chrome.py
index e0e29cb..83820d1 100644
--- a/scripts/artifacts/chrome.py
+++ b/scripts/artifacts/chrome.py
@@ -343,11 +343,4 @@ def get_chrome(files_found, report_folder, seeker, wrap_text):
             logfunc(f'No {browser_name} - Keyword Search Terms data available')
         
         
-        db.close()
-
-__artifacts__ = {
-        "Chrome": (
-                "Chromium",
-                ('*/data/data/*/app_chrome/Default/History*', '*/data/data/*/app_sbrowser/Default/History*', '*/data/data/*/app_opera/History*'),
-                get_chrome)
-}
\ No newline at end of file
+        db.close()
\ No newline at end of file
diff --git a/scripts/artifacts/chromeAutofill.py b/scripts/artifacts/chromeAutofill.py
index 4ff3ec4..8646399 100644
--- a/scripts/artifacts/chromeAutofill.py
+++ b/scripts/artifacts/chromeAutofill.py
@@ -154,10 +154,3 @@ def get_chromeAutofill(files_found, report_folder, seeker, wrap_text):
             logfunc(f'No {browser_name} - Autofill - Profiles data available')
         
         db.close()
-
-__artifacts__ = {
-        "ChromeAutofill": (
-                "Chromium",
-                ('*/data/data/*/app_chrome/Default/Web Data*', '*/data/data/*/app_sbrowser/Default/Web Data*', '*/data/data/*/app_opera/Web Data*'),
-                get_chromeAutofill)
-}
\ No newline at end of file
diff --git a/scripts/artifacts/chromeBookmarks.py b/scripts/artifacts/chromeBookmarks.py
index ac162fa..721e9a0 100644
--- a/scripts/artifacts/chromeBookmarks.py
+++ b/scripts/artifacts/chromeBookmarks.py
@@ -70,10 +70,3 @@ def get_chromeBookmarks(files_found, report_folder, seeker, wrap_text):
             timeline(report_folder, tlactivity, data_list, data_headers)
         else:
             logfunc(f'No {browser_name} - Bookmarks data available')
-
-__artifacts__ = {
-        "ChromeBookmarks": (
-                "Chromium",
-                ('*/data/data/*/app_chrome/Default/Bookmarks*', '*/data/data/*/app_sbrowser/Default/Bookmarks*', '*/data/data/*/app_opera/Bookmarks*'),
-                get_chromeBookmarks)
-}
\ No newline at end of file
diff --git a/scripts/artifacts/chromeCookies.py b/scripts/artifacts/chromeCookies.py
index 0517c57..d2b5c2f 100644
--- a/scripts/artifacts/chromeCookies.py
+++ b/scripts/artifacts/chromeCookies.py
@@ -98,10 +98,3 @@ def get_chromeCookies(files_found, report_folder, seeker, wrap_text):
             logfunc(f'No {browser_name} - Cookies data available')
         
         db.close()
-
-__artifacts__ = {
-        "ChromeCookies": (
-                "Chromium",
-                ('*/data/data/*/app_chrome/Default/Cookies*', '*/data/data/*/app_sbrowser/Default/Cookies*', '*/data/data/*/app_opera/Cookies*'),
-                get_chromeCookies)
-}
\ No newline at end of file
diff --git a/scripts/artifacts/chromeLoginData.py b/scripts/artifacts/chromeLoginData.py
index b223d60..1339392 100644
--- a/scripts/artifacts/chromeLoginData.py
+++ b/scripts/artifacts/chromeLoginData.py
@@ -114,11 +114,4 @@ def get_chromeLoginData(files_found, report_folder, seeker, wrap_text):
         else:
             logfunc(f'No {browser_name} - Login Data available')
         
-        db.close()
-    
-__artifacts__ = {
-        "ChromeLoginData": (
-                "Chromium",
-                ('*/data/data/*/app_chrome/Default/Login Data*', '*/data/data/*/app_sbrowser/Default/Login Data*', '*/data/data/*/app_opera/Login Data*'),
-                get_chromeLoginData)
-}
\ No newline at end of file
+        db.close()
\ No newline at end of file
diff --git a/scripts/artifacts/chromeMediaHistory.py b/scripts/artifacts/chromeMediaHistory.py
index c4dba9a..ce5edd3 100644
--- a/scripts/artifacts/chromeMediaHistory.py
+++ b/scripts/artifacts/chromeMediaHistory.py
@@ -148,10 +148,4 @@ def get_chromeMediaHistory(files_found, report_folder, seeker, wrap_text):
             logfunc(f'No {browser_name} - Media History - Origins data available')
         
         db.close()
-
-__artifacts__ = {
-        "ChromeMediaHistory": (
-                "Chromium",
-                ('*/data/data/*/app_chrome/Default/Media History*','*/data/data/*/app_sbrowser/Default/Media History*', '*/data/data/*/app_opera/Media History*'),
-                get_chromeMediaHistory)
-}
\ No newline at end of file
+        return
\ No newline at end of file
diff --git a/scripts/artifacts/chromeNetworkActionPredictor.py b/scripts/artifacts/chromeNetworkActionPredictor.py
index 8184c5b..9e59906 100644
--- a/scripts/artifacts/chromeNetworkActionPredictor.py
+++ b/scripts/artifacts/chromeNetworkActionPredictor.py
@@ -64,10 +64,4 @@ def get_chromeNetworkActionPredictor(files_found, report_folder, seeker, wrap_te
             logfunc(f'No {browser_name} - Network Action Predictor data available')
         
         db.close()
-
-__artifacts__ = {
-        "ChromeNetworkActionPredictor": (
-                "Chromium",
-                ('*/data/data/*/app_Chrome/Default/Network Action Predictor*','*/data/data/*/app_sbrowser/Default/Network Action Predictor*', '*/data/data/*/app_opera/Network Action Predicator*'),
-                get_chromeNetworkActionPredictor)
-}
\ No newline at end of file
+        return
\ No newline at end of file
diff --git a/scripts/artifacts/chromeOfflinePages.py b/scripts/artifacts/chromeOfflinePages.py
index f8ca273..0de8876 100644
--- a/scripts/artifacts/chromeOfflinePages.py
+++ b/scripts/artifacts/chromeOfflinePages.py
@@ -71,11 +71,4 @@ def get_chromeOfflinePages(files_found, report_folder, seeker, wrap_text):
         else:
             logfunc(f'No {browser_name} - Offline Pages data available')
         
-        db.close()
-
-__artifacts__ = {
-        "ChromeOfflinePages": (
-                "Chromium",
-                ('*/data/data/*/app_chrome/Default/Offline Pages/metadata/OfflinePages.db*', '*/data/data/*/app_sbrowser/Default/Offline Pages/metadata/OfflinePages.db*'),
-                get_chromeOfflinePages)
-}
\ No newline at end of file
+        db.close()
\ No newline at end of file
diff --git a/scripts/artifacts/chromeTopSites.py b/scripts/artifacts/chromeTopSites.py
index 0caf669..f971f36 100644
--- a/scripts/artifacts/chromeTopSites.py
+++ b/scripts/artifacts/chromeTopSites.py
@@ -67,11 +67,4 @@ def get_chromeTopSites(files_found, report_folder, seeker, wrap_text):
         else:
             logfunc(f'No {browser_name} - Top Sites data available')
         
-        db.close()
-        
-__artifacts__ = {
-        "ChromeTopSites": (
-                "Chromium",
-                ('*/data/data/*/app_chrome/Default/Top Sites*', '*/data/data/*/app_sbrowser/Default/Top Sites*', '*/data/*/app_opera/Top Sites*'),
-                get_chromeTopSites)
-}
\ No newline at end of file
+        db.close()
\ No newline at end of file
diff --git a/scripts/artifacts/clipBoard.py b/scripts/artifacts/clipBoard.py
index bcf38e9..8faafd9 100644
--- a/scripts/artifacts/clipBoard.py
+++ b/scripts/artifacts/clipBoard.py
@@ -71,10 +71,4 @@ def get_clipBoard(files_found, report_folder, seeker, wrap_text):
         
     else:
         logfunc(f'No Clipboard Data available')
-
-__artifacts__ = {
-        "ClipBoard": (
-                "Clipboard",
-                ('*/data/*clipboard/*/*'),
-                get_clipBoard)
-}
\ No newline at end of file
+    
\ No newline at end of file
diff --git a/scripts/artifacts/cmh.py b/scripts/artifacts/cmh.py
index 5e38ffd..d23d84f 100644
--- a/scripts/artifacts/cmh.py
+++ b/scripts/artifacts/cmh.py
@@ -54,10 +54,4 @@ def get_cmh(files_found, report_folder, seeker, wrap_text):
     else:
         logfunc(f'No Samsung_CMH_GeoData available')    
     db.close()
-
-__artifacts__ = {
-        "cmh": (
-                "Samsung_CMH",
-                ('*/cmh.db'),
-                get_cmh)
-}
\ No newline at end of file
+    return
\ No newline at end of file
diff --git a/scripts/artifacts/contacts.py b/scripts/artifacts/contacts.py
index 904056a..61e5ec2 100644
--- a/scripts/artifacts/contacts.py
+++ b/scripts/artifacts/contacts.py
@@ -73,6 +73,14 @@ def get_contacts(files_found, report_folder, seeker, wrap_text):
             logfunc('No Contacts found')
             
 
-        db.close
+        db.close()
     
-    return
\ No newline at end of file
+    return
+
+# 'contacts':('Contacts', ('**/com.android.providers.contacts/databases/contact*', '**/com.sec.android.provider.logsprovider/databases/logs.db*')),
+__artifacts__ = {
+    "Contacts": (
+        "Contacts",
+        ('**/com.android.providers.contacts/databases/contact*', '**/com.sec.android.provider.logsprovider/databases/logs.db*'),
+        get_contacts)
+}
\ No newline at end of file
diff --git a/scripts/artifacts/discreteNative.py b/scripts/artifacts/discreteNative.py
index d2f5be7..0febbd3 100644
--- a/scripts/artifacts/discreteNative.py
+++ b/scripts/artifacts/discreteNative.py
@@ -74,11 +74,4 @@ def get_discreteNative(files_found, report_folder, seeker, wrap_text):
         tlactivity = f'Privacy Dashboard'
         timeline(report_folder, tlactivity, data_list, data_headers)
     else:
-        logfunc('No Privacy Dashboard data available')
-        
-__artifacts__ = {
-        "DiscreteNative": (
-                "Privacy Dashboard",
-                ('*/data/system/appops/discrete/*'),
-                get_discreteNative)
-}
\ No newline at end of file
+        logfunc('No Privacy Dashboard data available')
\ No newline at end of file
diff --git a/scripts/artifacts/duckThumbs.py b/scripts/artifacts/duckThumbs.py
index 83b1206..17b9124 100644
--- a/scripts/artifacts/duckThumbs.py
+++ b/scripts/artifacts/duckThumbs.py
@@ -43,9 +43,6 @@ def get_duckThumbs(files_found, report_folder, seeker, wrap_text):
     else:
         logfunc('No DuckDuckGo Tab Thumbnails data available')
         
-__artifacts__ = {
-        "DuckThumbs'": (
-                "DuckDuckGo",
-                ('*/com.duckduckgo.mobile.android/cache/tabPreviews/*/*.jpg'),
-                get_duckThumbs)
-}
\ No newline at end of file
+
+        
+        
\ No newline at end of file
diff --git a/scripts/artifacts/emulatedSmeta.py b/scripts/artifacts/emulatedSmeta.py
index 87ea393..cd6fa9d 100644
--- a/scripts/artifacts/emulatedSmeta.py
+++ b/scripts/artifacts/emulatedSmeta.py
@@ -236,12 +236,11 @@ def get_emulatedSmeta(files_found, report_folder, seeker, wrap_text):
             timeline(report_folder, tlactivity, data_list, data_headers)
         else:
             logfunc('No Emulated Storage Metadata Videos data available')
-
+        
+        
+        
+        
+        
+        
         db.close()
-
-__artifacts__ = {
-        "EmulatedSmeta'": (
-                "Emulated Storage Metadata",
-                ('*/data/data/com.google.android.providers.media.module/databases/external.db*'),
-                get_emulatedSmeta)
-}
\ No newline at end of file
+        return
\ No newline at end of file
diff --git a/scripts/artifacts/errp.py b/scripts/artifacts/errp.py
index c5feef6..aa6170a 100644
--- a/scripts/artifacts/errp.py
+++ b/scripts/artifacts/errp.py
@@ -44,11 +44,4 @@ def get_errp(files_found, report_folder, seeker, wrap_text):
             tlactivity = f'Samsung Samsung eRR.p'
             timeline(report_folder, tlactivity, data_list, data_headers)
         else:
-            logfunc('No Samsung Samsung eRR.p data available')
-            
-__artifacts__ = {
-        "Errp": (
-                "Wipe & Setup",
-                ('*/data/system/users/service/eRR.p'),
-                get_errp)
-}
\ No newline at end of file
+            logfunc('No Samsung Samsung eRR.p data available')
\ No newline at end of file
diff --git a/scripts/artifacts/etc_hosts.py b/scripts/artifacts/etc_hosts.py
index 6a0f589..18692fd 100644
--- a/scripts/artifacts/etc_hosts.py
+++ b/scripts/artifacts/etc_hosts.py
@@ -32,11 +32,4 @@ def get_etc_hosts(files_found, report_folder, seeker, wrap_text):
         tsv(report_folder, data_headers, data_list, tsvname)
         
     else:
-        logfunc(f'No etc hosts file available, or nothing significant found.')
-        
-__artifacts__ = {
-        "Etc_hosts": (
-                "Etc Hosts",
-                ('*/system/etc/hosts'),
-                get_etc_hosts)
-}
\ No newline at end of file
+        logfunc(f'No etc hosts file available, or nothing significant found.')
\ No newline at end of file
diff --git a/scripts/artifacts/factory_reset.py b/scripts/artifacts/factory_reset.py
index e93a23c..0328ce5 100644
--- a/scripts/artifacts/factory_reset.py
+++ b/scripts/artifacts/factory_reset.py
@@ -35,11 +35,4 @@ def get_factory_reset(files_found, report_folder, seeker, wrap_text):
             timeline(report_folder, tlactivity, data_list, data_headers)
             
         else:
-            logfunc('No Factory Reset data available')
-
-__artifacts__ = {
-        "Factory_reset": (
-                "Wipe & Setup",
-                ('*/data/misc/bootstat/factory_reset'),
-                get_factory_reset)
-}
\ No newline at end of file
+            logfunc('No Factory Reset data available')
\ No newline at end of file
diff --git a/scripts/artifacts/firefox.py b/scripts/artifacts/firefox.py
index 9bd82d0..9a242fc 100644
--- a/scripts/artifacts/firefox.py
+++ b/scripts/artifacts/firefox.py
@@ -185,11 +185,4 @@ def get_firefox(files_found, report_folder, seeker, wrap_text):
         else:
             logfunc('No Firefox - Search Terms data available')
         
-        db.close()
-    
-__artifacts__ = {
-        "Firefox": (
-                "Firefox",
-                ('*/data/data/org.mozilla.firefox/files/places.sqlite*'),
-                get_firefox)
-}
\ No newline at end of file
+        db.close()
\ No newline at end of file
diff --git a/scripts/artifacts/firefoxCookies.py b/scripts/artifacts/firefoxCookies.py
index 258d653..21f39fa 100644
--- a/scripts/artifacts/firefoxCookies.py
+++ b/scripts/artifacts/firefoxCookies.py
@@ -49,11 +49,4 @@ def get_firefoxCookies(files_found, report_folder, seeker, wrap_text):
         else:
             logfunc('No Firefox - Cookies data available')
         
-        db.close()
-    
-__artifacts__ = {
-        "FirefoxCookies": (
-                "Firefox",
-                ('*/data/data/org.mozilla.firefox/files/mozilla/*.default/cookies.sqlite*'),
-                get_firefoxCookies)
-}
\ No newline at end of file
+        db.close()
\ No newline at end of file
diff --git a/scripts/artifacts/firefoxDownloads.py b/scripts/artifacts/firefoxDownloads.py
index 43eb0be..c193cda 100644
--- a/scripts/artifacts/firefoxDownloads.py
+++ b/scripts/artifacts/firefoxDownloads.py
@@ -53,11 +53,4 @@ def get_firefoxDownloads(files_found, report_folder, seeker, wrap_text):
         else:
             logfunc('No Firefox - Downloads data available')
         
-        db.close()
-    
-__artifacts__ = {
-        "FirefoxDownloads": (
-                "Firefox",
-                ('*/data/data/org.mozilla.firefox/databases/mozac_downloads_database*'),
-                get_firefoxDownloads)
-}
\ No newline at end of file
+        db.close()
\ No newline at end of file
diff --git a/scripts/artifacts/firefoxFormHistory.py b/scripts/artifacts/firefoxFormHistory.py
index 6fc3411..550bb6d 100644
--- a/scripts/artifacts/firefoxFormHistory.py
+++ b/scripts/artifacts/firefoxFormHistory.py
@@ -48,11 +48,4 @@ def get_firefoxFormHistory(files_found, report_folder, seeker, wrap_text):
         else:
             logfunc('No Firefox - Form History data available')
         
-        db.close()
-    
-__artifacts__ = {
-        "FirefoxFormHistory": (
-                "Firefox",
-                ('*/data/data/org.mozilla.firefox/files/mozilla/*.default/formhistory.sqlite*'),
-                get_firefoxFormHistory)
-}
\ No newline at end of file
+        db.close()
\ No newline at end of file
diff --git a/scripts/artifacts/firefoxPermissions.py b/scripts/artifacts/firefoxPermissions.py
index 09d8814..1969f55 100644
--- a/scripts/artifacts/firefoxPermissions.py
+++ b/scripts/artifacts/firefoxPermissions.py
@@ -53,11 +53,4 @@ def get_firefoxPermissions(files_found, report_folder, seeker, wrap_text):
         else:
             logfunc('No Firefox - Permissions data available')
         
-        db.close()
-    
-__artifacts__ = {
-        "FirefoxPermissions": (
-                "Firefox",
-                ('*/data/data/org.mozilla.firefox/files/mozilla/*.default/permissions.sqlite*'),
-                get_firefoxPermissions)
-}
\ No newline at end of file
+        db.close()
\ No newline at end of file
diff --git a/scripts/artifacts/firefoxRecentlyClosedTabs.py b/scripts/artifacts/firefoxRecentlyClosedTabs.py
index d298db6..62fe9bc 100644
--- a/scripts/artifacts/firefoxRecentlyClosedTabs.py
+++ b/scripts/artifacts/firefoxRecentlyClosedTabs.py
@@ -44,11 +44,4 @@ def get_firefoxRecentlyClosedTabs(files_found, report_folder, seeker, wrap_text)
         else:
             logfunc('No Firefox - Recently Closed Tabs data available')
         
-        db.close()
-
-__artifacts__ = {
-        "FirefoxRecentlyClosedTabs": (
-                "Firefox",
-                ('*/data/data/org.mozilla.firefox/databases/recently_closed_tabs*'),
-                get_firefoxRecentlyClosedTabs)
-}
\ No newline at end of file
+        db.close()
\ No newline at end of file
diff --git a/scripts/artifacts/firefoxTopSites.py b/scripts/artifacts/firefoxTopSites.py
index 9afba2a..8cb294b 100644
--- a/scripts/artifacts/firefoxTopSites.py
+++ b/scripts/artifacts/firefoxTopSites.py
@@ -48,11 +48,4 @@ def get_firefoxTopSites(files_found, report_folder, seeker, wrap_text):
         else:
             logfunc('No Firefox - Top Sites data available')
         
-        db.close()
-    
-__artifacts__ = {
-        "FirefoxTopSites": (
-                "Firefox",
-                ('*/data/data/org.mozilla.firefox/databases/top_sites*'),
-                get_firefoxTopSites)
-}
\ No newline at end of file
+        db.close()
\ No newline at end of file
diff --git a/scripts/artifacts/fitbitActivity.py b/scripts/artifacts/fitbitActivity.py
index 7477928..6d88a4e 100644
--- a/scripts/artifacts/fitbitActivity.py
+++ b/scripts/artifacts/fitbitActivity.py
@@ -67,12 +67,5 @@ def get_fitbitActivity(files_found, report_folder, seeker, wrap_text):
         logfunc('No Fitbit Activity data available')
         
     db.close()
-    
-__artifacts__ = {
-        "FitbitActivity": (
-                "Fitbit",
-                ('*/data/data/com.fitbit.FitbitMobile/databases/activity_db*'),
-                get_fitbitActivity)
-}
 
     
\ No newline at end of file
diff --git a/scripts/artifacts/fitbitDevices.py b/scripts/artifacts/fitbitDevices.py
index df2bafc..c0b4f84 100644
--- a/scripts/artifacts/fitbitDevices.py
+++ b/scripts/artifacts/fitbitDevices.py
@@ -46,11 +46,4 @@ def get_fitbitDevices(files_found, report_folder, seeker, wrap_text):
             timeline(report_folder, tlactivity, data_list, data_headers)
             
         else:
-            logfunc('No Fitbit Device Info data available')
-            
-__artifacts__ = {
-        "FitbitDevices": (
-                "Fitbit",
-                ('*/data/data/com.fitbit.FitbitMobile/databases/device_database*'),
-                get_fitbitDevices)
-}
\ No newline at end of file
+            logfunc('No Fitbit Device Info data available')
\ No newline at end of file
diff --git a/scripts/artifacts/fitbitExercise.py b/scripts/artifacts/fitbitExercise.py
index e4d6e2f..1234200 100644
--- a/scripts/artifacts/fitbitExercise.py
+++ b/scripts/artifacts/fitbitExercise.py
@@ -65,11 +65,4 @@ def get_fitbitExercise(files_found, report_folder, seeker, wrap_text):
             tlactivity = f'Fitbit Exercise'
             timeline(report_folder, tlactivity, data_list, data_headers)
         else:
-            logfunc(f'No Fitbit - Exercise data available')
-            
-__artifacts__ = {
-        "FitbitExercise": (
-                "Fitbit",
-                ('*/data/data/com.fitbit.FitbitMobile/databases/exercise_db*'),
-                get_fitbitExercise)
-}
\ No newline at end of file
+            logfunc(f'No Fitbit - Exercise data available')
\ No newline at end of file
diff --git a/scripts/artifacts/fitbitHeart.py b/scripts/artifacts/fitbitHeart.py
index 5b7c54c..6710cc4 100644
--- a/scripts/artifacts/fitbitHeart.py
+++ b/scripts/artifacts/fitbitHeart.py
@@ -42,10 +42,5 @@ def get_fitbitHeart(files_found, report_folder, seeker, wrap_text):
         logfunc('No Fitbit Heart Rate Summary data available')
         
     db.close()
-    
-__artifacts__ = {
-        "FitbitHeart": (
-                "Fitbit",
-                ('*/data/data/com.fitbit.FitbitMobile/databases/heart_rate_db*'),
-                get_fitbitHeart)
-}
\ No newline at end of file
+
+    
\ No newline at end of file
diff --git a/scripts/artifacts/fitbitSleep.py b/scripts/artifacts/fitbitSleep.py
index 917008e..262cda8 100644
--- a/scripts/artifacts/fitbitSleep.py
+++ b/scripts/artifacts/fitbitSleep.py
@@ -80,9 +80,4 @@ def get_fitbitSleep(files_found, report_folder, seeker, wrap_text):
         
     db.close()
 
-__artifacts__ = {
-        "fitbitSleep": (
-                "Fitbit",
-                ('*/data/data/com.fitbit.FitbitMobile/databases/sleep*'),
-                get_fitbitSleep)
-}
\ No newline at end of file
+    
\ No newline at end of file
diff --git a/scripts/artifacts/fitbitSocial.py b/scripts/artifacts/fitbitSocial.py
index 6709400..d4f6648 100644
--- a/scripts/artifacts/fitbitSocial.py
+++ b/scripts/artifacts/fitbitSocial.py
@@ -87,9 +87,4 @@ def get_fitbitSocial(files_found, report_folder, seeker, wrap_text):
         
     db.close()
 
-__artifacts__ = {
-        "FitbitSocial": (
-                "Fitbit",
-                ('*/data/data/com.fitbit.FitbitMobile/databases/social_db*'),
-                get_fitbitSocial)
-}
\ No newline at end of file
+    
\ No newline at end of file
diff --git a/scripts/artifacts/fitbitWalk.py b/scripts/artifacts/fitbitWalk.py
index 0c7523e..9978ea8 100644
--- a/scripts/artifacts/fitbitWalk.py
+++ b/scripts/artifacts/fitbitWalk.py
@@ -45,9 +45,4 @@ def get_fitbitWalk(files_found, report_folder, seeker, wrap_text):
         
     db.close()
 
-__artifacts__ = {
-        "FitbitWalk": (
-                "Fitbit",
-                ('*/data/data/com.fitbit.FitbitMobile/databases/mobile_track_db*'),
-                get_fitbitWalk)
-}
\ No newline at end of file
+    
\ No newline at end of file
diff --git a/scripts/artifacts/gboard.py b/scripts/artifacts/gboard.py
index 16b5d80..8a51ec6 100644
--- a/scripts/artifacts/gboard.py
+++ b/scripts/artifacts/gboard.py
@@ -242,10 +242,3 @@ def read_trainingcachev3_sessions(file_found, report_folder, seeker):
 
     # Close
     conn.close()
-
-__artifacts__ = {
-        "GboardCache": (
-                "Gboard Keyboard",
-                ('**/com.google.android.inputmethod.latin/databases/trainingcache*.db'),
-                get_gboardCache)
-}
\ No newline at end of file
diff --git a/scripts/artifacts/gmail.py b/scripts/artifacts/gmail.py
index 351234f..1f4822b 100644
--- a/scripts/artifacts/gmail.py
+++ b/scripts/artifacts/gmail.py
@@ -46,11 +46,4 @@ def get_gmailActive(files_found, report_folder, seeker, wrap_text):
         tsvname = f'Gmail - Active'
         tsv(report_folder, data_headers, data_list, tsvname)
     else:
-        logfunc('No active Gmail account found')
-
-__artifacts__ = {
-        "GmailActive": (
-                "Gmail",
-                ('**/com.google.android.gm/shared_prefs/Gmail.xml'),
-                get_gmailActive)
-}
\ No newline at end of file
+        logfunc('No active Gmail account found')
\ No newline at end of file
diff --git a/scripts/artifacts/googleCallScreen.py b/scripts/artifacts/googleCallScreen.py
index b8d5bad..a0c2fe2 100644
--- a/scripts/artifacts/googleCallScreen.py
+++ b/scripts/artifacts/googleCallScreen.py
@@ -96,10 +96,4 @@ def get_googleCallScreen(files_found, report_folder, seeker, wrap_text):
             logfunc('No Google Call Screen data available')
     
         db.close()
-
-__artifacts__ = {
-        "GoogleCallScreen": (
-                "Google Call Screen",
-                ('**/com.google.android.dialer/databases/callscreen_transcripts*','**/com.google.android.dialer/files/callscreenrecordings/*.*'),
-                get_googleCallScreen)
-}
+    return
diff --git a/scripts/artifacts/googleChat.py b/scripts/artifacts/googleChat.py
index 52b65d5..5726ea9 100644
--- a/scripts/artifacts/googleChat.py
+++ b/scripts/artifacts/googleChat.py
@@ -134,11 +134,4 @@ def get_googleChat(files_found, report_folder, seeker, wrap_text):
         else:
             logfunc('No Google Chat Group Information data available')
                 
-        db.close()
-
-__artifacts__ = {
-        "GoogleChat": (
-                "Google Chat",
-                ('*/com.google.android.gm/databases/user_accounts/*/dynamite*.db','*/com.google.android.apps.dynamite/databases/dynamite*.db'),
-                get_googleChat)
-}
\ No newline at end of file
+        db.close()
\ No newline at end of file
diff --git a/scripts/artifacts/googleDuo.py b/scripts/artifacts/googleDuo.py
index 2717ec5..e5ddeaa 100644
--- a/scripts/artifacts/googleDuo.py
+++ b/scripts/artifacts/googleDuo.py
@@ -168,10 +168,4 @@ def get_googleDuo(files_found, report_folder, seeker, wrap_text):
             logfunc('No Google Duo - Notes data available')
     
     db.close()
-
-__artifacts__ = {
-        "googleDuo": (
-                "Google Duo",
-                ('*/com.google.android.apps.tachyon/databases/tachyon.db*','*/com.google.android.apps.tachyon/files/media/*.*'),
-                get_googleDuo)
-}
\ No newline at end of file
+    return
diff --git a/scripts/artifacts/googleFitGMS.py b/scripts/artifacts/googleFitGMS.py
index c4dc1f3..feeca3a 100644
--- a/scripts/artifacts/googleFitGMS.py
+++ b/scripts/artifacts/googleFitGMS.py
@@ -58,9 +58,4 @@ def get_googleFitGMS(files_found, report_folder, seeker, wrap_text):
         else:
             logfunc('No Google Fit (GMS) - Activity Sessions data available')
                 
-__artifacts__ = {
-        "GoogleFitGMS": (
-                "Google Fit (GMS)",
-                ('*/data/data/com.google.android.gms/databases/fitness.db.*'),
-                get_googleFitGMS)
-}
\ No newline at end of file
+        db.close()
\ No newline at end of file
diff --git a/scripts/artifacts/googleKeepNotes.py b/scripts/artifacts/googleKeepNotes.py
index 7ea2469..845a101 100644
--- a/scripts/artifacts/googleKeepNotes.py
+++ b/scripts/artifacts/googleKeepNotes.py
@@ -133,10 +133,4 @@ def get_googleKeepNotes(files_found, report_folder, seeker, wrap_text):
         else:
             logfunc("No Google Keep - Notes Sharing data found")
         db.close()
-        
-__artifacts__ = {
-        "GoogleKeepNotes": (
-                "Google Keep",
-                ('*/data/com.google.android.keep/databases/keep.db*'),
-                get_googleKeepNotes)
-}
\ No newline at end of file
+        return
diff --git a/scripts/artifacts/googleMessages.py b/scripts/artifacts/googleMessages.py
index 38c9eb0..4b98c70 100644
--- a/scripts/artifacts/googleMessages.py
+++ b/scripts/artifacts/googleMessages.py
@@ -62,11 +62,4 @@ def get_googleMessages(files_found, report_folder, seeker, wrap_text):
         else:
             logfunc('No Google Messages data available')
         
-        db.close()
-
-__artifacts__ = {
-        "GoogleMessages": (
-                "Google Messages",
-                ('*/com.google.android.apps.messaging/databases/bugle_db*'),
-                get_googleMessages)
-}
\ No newline at end of file
+        db.close()
\ No newline at end of file
diff --git a/scripts/artifacts/googleNowPlaying.py b/scripts/artifacts/googleNowPlaying.py
index bfd0def..e8eb360 100644
--- a/scripts/artifacts/googleNowPlaying.py
+++ b/scripts/artifacts/googleNowPlaying.py
@@ -35,7 +35,12 @@ def FilterInvalidValue(obj):
     return obj
 
 def AreContentsSame(last_data_set, timezones, songtitle, artist, duration, album, year):
-    return last_data_set[1] == timezones and last_data_set[2] == songtitle and last_data_set[3] == artist and last_data_set[4] == duration and last_data_set[5] == album and last_data_set[6] == year
+    return last_data_set[1] == timezones and \
+            last_data_set[2] == songtitle and \
+            last_data_set[3] == artist and \
+            last_data_set[4] == duration and \
+            last_data_set[5] == album and \
+            last_data_set[6] == year
         
 
 def get_googleNowPlaying(files_found, report_folder, seeker, wrap_text):
@@ -68,7 +73,11 @@ def get_googleNowPlaying(files_found, report_folder, seeker, wrap_text):
         all_rows = cursor.fetchall()
         usageentries = len(all_rows)
         if usageentries > 0:
-            description = 'This is data stored by the Now Playing feature in Pixel phones, which shows song data on the lock screen for any music playing nearby. It\'s part of <a href="https://play.google.com/store/apps/details?id=com.google.intelligence.sense" target="_blank">Pixel Ambient Services</a> or part of <a href="https://play.google.com/store/apps/details?id=com.google.android.as" target="_blank">Pixel Device Personalization Services</a> depending on OS version.'
+            description = 'This is data stored by the Now Playing feature in Pixel phones, which '\
+                        'shows song data on the lock screen for any music playing nearby. It\'s ' \
+                        'part of <a href="https://play.google.com/store/apps/details?id=com.google.intelligence.sense"'\
+                        ' target="_blank">Pixel Ambient Services</a> or part of <a href="https://play.google.com/store/apps/details?id=com.google.android.as"'\
+                        ' target="_blank">Pixel Device Personalization Services</a> depending on OS version.'
             report = ArtifactHtmlReport('Now Playing History')
             report.start_artifact_report(report_folder, 'Now Playing', description)
             report.add_script()
@@ -136,10 +145,4 @@ def get_googleNowPlaying(files_found, report_folder, seeker, wrap_text):
             logfunc('No Google Now Playing history')
 
         db.close()
-
-__artifacts__ = {
-        "GoogleNowPlaying": (
-                "Now Playing",
-                ('*/data/data/com.google.intelligence.sense/db/history_db*','*/data/data/com.google.android.as/databases/history_db*'),
-                get_googleNowPlaying)
-}
\ No newline at end of file
+        return
diff --git a/scripts/artifacts/googlePhotos.py b/scripts/artifacts/googlePhotos.py
index 5b89b65..f1bbcae 100644
--- a/scripts/artifacts/googlePhotos.py
+++ b/scripts/artifacts/googlePhotos.py
@@ -406,10 +406,4 @@ def get_googlePhotos(files_found, report_folder, seeker, wrap_text):
         logfunc('No Google Photos - Local Trash data available')
     
     db.close()
-
-__artifacts__ = {
-        "GooglePhotos": (
-                "Google Photos",
-                ('*/data/data/com.google.android.apps.photos/databases/gphotos0.db*','*/data/data/com.google.android.apps.photos/databases/disk_cache*','*/data/data/com.google.android.apps.photos/cache/glide_cache/*','*/data/data/com.google.android.apps.photos/databases/local_trash.db*','*/data/data/com.google.android.apps.photos/files/trash_files/*'),
-                get_googlePhotos)
-}
\ No newline at end of file
+    return
diff --git a/scripts/artifacts/googlePlaySearches.py b/scripts/artifacts/googlePlaySearches.py
index 454cd04..48fa265 100644
--- a/scripts/artifacts/googlePlaySearches.py
+++ b/scripts/artifacts/googlePlaySearches.py
@@ -40,10 +40,5 @@ def get_googlePlaySearches(files_found, report_folder, seeker, wrap_text):
         logfunc('No Google Play Searches data available')
     
     db.close()
+    return
 
-__artifacts__ = {
-        "GooglePlaySearches": (
-                "Google Play",
-                ('*/data/data/com.android.vending/databases/suggestions.db*'),
-                get_googlePlaySearches)
-}
diff --git a/scripts/artifacts/googleQuickSearchbox.py b/scripts/artifacts/googleQuickSearchbox.py
index 199ee9f..28e4125 100644
--- a/scripts/artifacts/googleQuickSearchbox.py
+++ b/scripts/artifacts/googleQuickSearchbox.py
@@ -155,12 +155,5 @@ def get_quicksearch(files_found, report_folder, seeker, wrap_text):
         tlactivity = f'Google Quick Search Box'
         timeline(report_folder, tlactivity, data_list, data_headers)
     else:
-        logfunc('No recent quick search or now data available')
-
-__artifacts__ = {
-        "Quicksearch": (
-                "Google Now & QuickSearch",
-                ('*/com.google.android.googlequicksearchbox/app_session/*.binarypb'),
-                get_quicksearch)
-}
+        logfunc('No recent quick search or now data available')            
             
\ No newline at end of file
diff --git a/scripts/artifacts/googleQuickSearchboxRecent.py b/scripts/artifacts/googleQuickSearchboxRecent.py
index 1389fb5..46a8e5c 100644
--- a/scripts/artifacts/googleQuickSearchboxRecent.py
+++ b/scripts/artifacts/googleQuickSearchboxRecent.py
@@ -107,11 +107,4 @@ def get_quicksearch_recent(files_found, report_folder, seeker, wrap_text):
         tsvname = f'google quick search box recent'
         tsv(report_folder, data_headers, data_list, tsvname)
     else:
-        logfunc('No recent quick search or now data available')
-
-__artifacts__ = {
-        "Quicksearch_recent": (
-                "Google Now & QuickSearch",
-                ('*/com.google.android.googlequicksearchbox/files/recently/*'),
-                get_quicksearch_recent)
-}
\ No newline at end of file
+        logfunc('No recent quick search or now data available')
\ No newline at end of file
diff --git a/scripts/artifacts/googleTasks.py b/scripts/artifacts/googleTasks.py
index 9bc6d0c..d44c08b 100644
--- a/scripts/artifacts/googleTasks.py
+++ b/scripts/artifacts/googleTasks.py
@@ -85,10 +85,4 @@ def get_googleTasks(files_found, report_folder, seeker, wrap_text):
 
         
         db.close()
-        
-__artifacts__ = {
-        "GoogleTasks": (
-                "Google Tasks",
-                ('*/com.google.android.apps.tasks/files/tasks-*/data.db'),
-                get_googleTasks)
-}
\ No newline at end of file
+    return
\ No newline at end of file
diff --git a/scripts/artifacts/googlemapaudio.py b/scripts/artifacts/googlemapaudio.py
index 419dffc..9c6c2a7 100644
--- a/scripts/artifacts/googlemapaudio.py
+++ b/scripts/artifacts/googlemapaudio.py
@@ -67,9 +67,3 @@ def get_googlemapaudio(files_found, report_folder, seeker, wrap_text):
     else:
         logfunc('No Google Audio Locations found')
             
-__artifacts__ = {
-        "Googlemapaudio": (
-                "Google Maps Voice Guidance",
-                ('*/data/data/com.google.android.apps.maps/app_tts-cache/*_*'),
-                get_googlemapaudio)
-}
\ No newline at end of file
diff --git a/scripts/artifacts/googlemaplocation.py b/scripts/artifacts/googlemaplocation.py
index 7109dbe..58a04c3 100644
--- a/scripts/artifacts/googlemaplocation.py
+++ b/scripts/artifacts/googlemaplocation.py
@@ -57,11 +57,4 @@ def get_googlemaplocation(files_found, report_folder, seeker, wrap_text):
             logfunc('No Google Map Locations found')
             
         db.close()
-        
-__artifacts__ = {
-        "Googlemaplocation": (
-                "GEO Location",
-                ('*/com.google.android.apps.maps/databases/da_destination_history*'),
-                get_googlemaplocation)
-}
     
\ No newline at end of file
diff --git a/scripts/artifacts/groupMe.py b/scripts/artifacts/groupMe.py
index 3873606..64a3a9d 100644
--- a/scripts/artifacts/groupMe.py
+++ b/scripts/artifacts/groupMe.py
@@ -119,11 +119,4 @@ def get_groupMe(files_found, report_folder, seeker, wrap_text):
         else:
             logfunc('No GroupMe Chat Information data available')
                 
-        db.close()
-
-__artifacts__ = {
-        "GroupMe": (
-                "GroupMe",
-                ('**/com.groupme.android/databases/groupme.db'),
-                get_groupMe)
-}
\ No newline at end of file
+        db.close()
\ No newline at end of file
diff --git a/scripts/artifacts/imagemngCache.py b/scripts/artifacts/imagemngCache.py
index 8593495..8a5f440 100644
--- a/scripts/artifacts/imagemngCache.py
+++ b/scripts/artifacts/imagemngCache.py
@@ -29,10 +29,4 @@ def get_imagemngCache(files_found, report_folder, seeker, wrap_text):
         timeline(report_folder, tlactivity, data_list, data_headers)
     else:
         logfunc(f'No Image Manager Cache files available')
-
-__artifacts__ = {
-        "ImagemngCache": (
-                "Image Manager Cache",
-                ('*/data/data/*/cache/image_manager_disk_cache/*.*'),
-                get_imagemngCache)
-}
\ No newline at end of file
+        
\ No newline at end of file
diff --git a/scripts/artifacts/imo.py b/scripts/artifacts/imo.py
index 8841081..f2e2cb3 100644
--- a/scripts/artifacts/imo.py
+++ b/scripts/artifacts/imo.py
@@ -108,10 +108,4 @@ def get_imo(files_found, report_folder, seeker, wrap_text):
 
     db.close
     
-__artifacts__ = {
-        "Imo": (
-                "IMO",
-                ('**/com.imo.android.imous/databases/*.db*'),
-                get_imo)
-}
-    
\ No newline at end of file
+    return
diff --git a/scripts/artifacts/installedappsGass.py b/scripts/artifacts/installedappsGass.py
index 894765a..a6932bb 100644
--- a/scripts/artifacts/installedappsGass.py
+++ b/scripts/artifacts/installedappsGass.py
@@ -43,10 +43,3 @@ def get_installedappsGass(files_found, report_folder, seeker, wrap_text):
                 logfunc('No Installed Apps data available{usernum}')
             
             db.close()
-
-__artifacts__ = {
-        "installedappsGass": (
-                "Installed Apps",
-                ('*/data/data/com.google.android.gms/databases/gass.db*', '*/data/user/*/com.google.android.gms/databases/gass.db*'),
-                get_installedappsGass)
-}
diff --git a/scripts/artifacts/installedappsLibrary.py b/scripts/artifacts/installedappsLibrary.py
index 34121f9..7766381 100644
--- a/scripts/artifacts/installedappsLibrary.py
+++ b/scripts/artifacts/installedappsLibrary.py
@@ -43,10 +43,4 @@ def get_installedappsLibrary(files_found, report_folder, seeker, wrap_text):
         logfunc('No Installed Apps (Library) data available')
     
     db.close()
-
-__artifacts__ = {
-        "InstalledappsLibrary": (
-                "Installed Apps",
-                ('*/data/data/com.android.vending/databases/library.db'),
-                get_installedappsLibrary)
-}
\ No newline at end of file
+    return
\ No newline at end of file
diff --git a/scripts/artifacts/installedappsVending.py b/scripts/artifacts/installedappsVending.py
index e7f1361..149bc3d 100644
--- a/scripts/artifacts/installedappsVending.py
+++ b/scripts/artifacts/installedappsVending.py
@@ -60,10 +60,4 @@ def get_installedappsVending(files_found, report_folder, seeker, wrap_text):
             logfunc('No Installed Apps data available')
     
     db.close()
-
-__artifacts__ = {
-        "InstalledappsVending": (
-                "Installed Apps",
-                ('*/data/data/com.android.vending/databases/localappstate.db'),
-                get_installedappsVending)
-}
\ No newline at end of file
+    return
\ No newline at end of file
diff --git a/scripts/artifacts/kijijiConversations.py b/scripts/artifacts/kijijiConversations.py
index 9a4dc11..4fd2dad 100644
--- a/scripts/artifacts/kijijiConversations.py
+++ b/scripts/artifacts/kijijiConversations.py
@@ -111,10 +111,3 @@ def AppendMessageRowsToDataList(data_list,
             recipientName = LOCAL_USER
 
         data_list.append((message['sortByDate'], conversationId, advertId, advertTitle, message['identifier'], senderId, senderName, recipientId, recipientName, message['state'], message['text']))
-
-__artifacts__ = {
-        "kijijiConversations": (
-                "Kijiji Conversations",
-                ('*/com.ebay.kijiji.ca/databases/messageBoxDatabase.*'),
-                get_kijijiConversations)
-}
\ No newline at end of file
diff --git a/scripts/artifacts/kijijiLocalUserInfo.py b/scripts/artifacts/kijijiLocalUserInfo.py
index 0b76918..1b93478 100644
--- a/scripts/artifacts/kijijiLocalUserInfo.py
+++ b/scripts/artifacts/kijijiLocalUserInfo.py
@@ -54,10 +54,4 @@ def get_kijijiLocalUserInfo(files_found, report_folder, seeker, wrap_text):
     
     tsvname = f'Kijiji Local User Information'
     tsv(report_folder, data_headers, data_list, tsvname)    
-
-__artifacts__ = {
-        "kijijiLocalUserInfo": (
-                "Kijiji Local User Information",
-                ('*/com.ebay.kijiji.ca/shared_prefs/LoginData.xml'),
-                get_kijijiLocalUserInfo)
-}
+    return True
diff --git a/scripts/artifacts/kijijiRecentSearches.py b/scripts/artifacts/kijijiRecentSearches.py
index f79c025..c55345c 100644
--- a/scripts/artifacts/kijijiRecentSearches.py
+++ b/scripts/artifacts/kijijiRecentSearches.py
@@ -75,10 +75,4 @@ def get_kijijiRecentSearches(files_found, report_folder, seeker, wrap_text):
         logfunc('No Kijiji Recent Search data was found.')
 
     db.close()
-
-__artifacts__ = {
-    "kijijiRecentSearches": (
-        "Kijiji Recent Searches",
-        ('*/com.ebay.kijiji.ca/databases/searches.*'),
-        get_kijijiRecentSearches)
-}
\ No newline at end of file
+    return True
\ No newline at end of file
diff --git a/scripts/artifacts/last_boot_time.py b/scripts/artifacts/last_boot_time.py
index 2892492..326e11a 100644
--- a/scripts/artifacts/last_boot_time.py
+++ b/scripts/artifacts/last_boot_time.py
@@ -35,11 +35,4 @@ def get_last_boot_time(files_found, report_folder, seeker, wrap_text):
             timeline(report_folder, tlactivity, data_list, data_headers)
             
         else:
-            logfunc('No Last Boot Time data available')
-
-__artifacts__ = {
-        "last_boot_time": (
-                "Power Events",
-                ('*/data/misc/bootstat/last_boot_time_utc'),
-                get_last_boot_time)
-}
\ No newline at end of file
+            logfunc('No Last Boot Time data available')
\ No newline at end of file
diff --git a/scripts/artifacts/lgRCS.py b/scripts/artifacts/lgRCS.py
index dc8c14b..501bb30 100644
--- a/scripts/artifacts/lgRCS.py
+++ b/scripts/artifacts/lgRCS.py
@@ -90,10 +90,4 @@ def get_lgRCS(files_found, report_folder, seeker, wrap_text):
         logfunc('No RCS Chats - LG data available')
     
     db.close()
-
-__artifacts__ = {
-        "lgRCS": (
-                "RCS Chats",
-                ('*/mmssms.db*'),
-                get_lgRCS)
-}
+    return
diff --git a/scripts/artifacts/line.py b/scripts/artifacts/line.py
index 3849eea..e29e7b9 100644
--- a/scripts/artifacts/line.py
+++ b/scripts/artifacts/line.py
@@ -179,9 +179,4 @@ def get_line(files_found, report_folder, seeker, wrap_text):
 
     db.close
     
-__artifacts__ = {
-        "line": (
-                "Line",
-                ('**/jp.naver.line.android/databases/**'),
-                get_line)
-}
\ No newline at end of file
+    return
\ No newline at end of file
diff --git a/scripts/artifacts/mega.py b/scripts/artifacts/mega.py
index 9abfaff..590892a 100644
--- a/scripts/artifacts/mega.py
+++ b/scripts/artifacts/mega.py
@@ -81,11 +81,4 @@ def get_mega(files_found, report_folder, seeker, wrap_text):
         else:
             logfunc('No MEGA - Chat data available')
         
-        db.close()
-
-__artifacts__ = {
-        "mega": (
-                "Mega",
-                ('*/data/data/mega.privacy.android.app/karere-*.db*'),
-                get_mega)
-}
\ No newline at end of file
+        db.close()
\ No newline at end of file
diff --git a/scripts/artifacts/mega_transfers.py b/scripts/artifacts/mega_transfers.py
index 467aee9..071256e 100644
--- a/scripts/artifacts/mega_transfers.py
+++ b/scripts/artifacts/mega_transfers.py
@@ -92,9 +92,3 @@ def get_mega_transfers(files_found, report_folder, seeker, wrap_text):
     else:
         logfunc('No MEGA files data available')
     
-__artifacts__ = {
-        "mega_transfers": (
-                "Mega",
-                ('*/data/data/mega.privacy.android.app/databases/megapreferences'),
-                get_mega_transfers)
-}
\ No newline at end of file
diff --git a/scripts/artifacts/mewe.py b/scripts/artifacts/mewe.py
index 344749f..e30eb8e 100644
--- a/scripts/artifacts/mewe.py
+++ b/scripts/artifacts/mewe.py
@@ -133,10 +133,3 @@ def get_mewe(files_found, report_folder, seeker, wrap_text):
     ]
     if not (True in artifacts):
         logfunc(f'{APP_NAME} data not found')
-
-__artifacts__ = {
-        "mewe": (
-                "MeWe",
-                ('*/com.mewe/databases/app_database', '*/com.mewe/shared_prefs/SGSession.xml'),
-                get_mewe)
-}
\ No newline at end of file
diff --git a/scripts/artifacts/pSettings.py b/scripts/artifacts/pSettings.py
index 86632f1..1048ea1 100644
--- a/scripts/artifacts/pSettings.py
+++ b/scripts/artifacts/pSettings.py
@@ -36,10 +36,5 @@ def get_pSettings(files_found, report_folder, seeker, wrap_text):
         logfunc('No Partner Settings data available')
     
     db.close()
+    return
 
-__artifacts__ = {
-        "pSettings": (
-                "Device Info",
-                ('*/data/data/com.google.android.gsf/databases/googlesettings.db*'),
-                get_pSettings)
-}
diff --git a/scripts/artifacts/packageGplinks.py b/scripts/artifacts/packageGplinks.py
index 07f818f..faacb18 100644
--- a/scripts/artifacts/packageGplinks.py
+++ b/scripts/artifacts/packageGplinks.py
@@ -33,10 +33,4 @@ def get_packageGplinks(files_found, report_folder, seeker, wrap_text):
         
     else:
         logfunc('No Google Play Links for Apps data available')
-
-__artifacts__ = {
-        "packageGplinks": (
-                "Installed Apps",
-                ('*/system/packages.list'),
-                get_packageGplinks)
-}
\ No newline at end of file
+            
\ No newline at end of file
diff --git a/scripts/artifacts/packageInfo.py b/scripts/artifacts/packageInfo.py
index 1168edd..ad17b49 100644
--- a/scripts/artifacts/packageInfo.py
+++ b/scripts/artifacts/packageInfo.py
@@ -94,10 +94,4 @@ def get_package_info(files_found, report_folder, seeker, wrap_text):
         timeline(report_folder, tlactivity, data_list, data_headers)
     else:
         logfunc('No package data available')            
-
-__artifacts__ = {
-        "package_info": (
-                "Installed Apps",
-                ('*/system/packages.xml'),
-                get_package_info)
-}
\ No newline at end of file
+            
\ No newline at end of file
diff --git a/scripts/artifacts/permissions.py b/scripts/artifacts/permissions.py
index 5767d9a..458ba3f 100644
--- a/scripts/artifacts/permissions.py
+++ b/scripts/artifacts/permissions.py
@@ -90,10 +90,4 @@ def get_permissions(files_found, report_folder, seeker, wrap_text):
                     
                     tsvname = f'Permissions - Packages and Shared User'
                     tsv(report_folder, data_headers, data_list_packages_su, tsvname)
-
-__artifacts__ = {
-        "permissions": (
-                "Permissions",
-                ('*/system/packages.xml'),
-                get_permissions)
-}
\ No newline at end of file
+            
\ No newline at end of file
diff --git a/scripts/artifacts/persistentProp.py b/scripts/artifacts/persistentProp.py
index 6b504a4..f79f85c 100644
--- a/scripts/artifacts/persistentProp.py
+++ b/scripts/artifacts/persistentProp.py
@@ -47,11 +47,4 @@ def get_persistentProp(files_found, report_folder, seeker, wrap_text):
             tlactivity = f'Persistent Properties'
             timeline(report_folder, tlactivity, data_list, data_headers)
         else:
-            logfunc('No Persistent Properties data available')
-            
-__artifacts__ = {
-        "persistentProp": (
-                "Wipe & Setup",
-                ('*/data/property/persistent_properties'),
-                get_persistentProp)
-}
\ No newline at end of file
+            logfunc('No Persistent Properties data available')
\ No newline at end of file
diff --git a/scripts/artifacts/playgroundVault.py b/scripts/artifacts/playgroundVault.py
index 3ac2649..c24e3de 100644
--- a/scripts/artifacts/playgroundVault.py
+++ b/scripts/artifacts/playgroundVault.py
@@ -98,10 +98,4 @@ def get_playgroundVault(files_found, report_folder, seeker, wrap_text):
             
         else:
             logfunc('No Playground Vault data available')
-
-__artifacts__ = {
-        "playgroundVault": (
-                "Encrypting Media Apps",
-                ('*/playground.develop.applocker/shared_prefs/crypto.KEY_256.xml','*/applocker/vault/*'),
-                get_playgroundVault)
-}
\ No newline at end of file
+        
\ No newline at end of file
diff --git a/scripts/artifacts/powerOffReset.py b/scripts/artifacts/powerOffReset.py
index e8e3381..0ba594f 100644
--- a/scripts/artifacts/powerOffReset.py
+++ b/scripts/artifacts/powerOffReset.py
@@ -56,10 +56,3 @@ def get_powerOffReset(files_found, report_folder, seeker, wrap_text):
         
     else:
         logfunc('No Power Off Reset data available')
-
-__artifacts__ = {
-        "powerOffReset": (
-                "Power Events",
-                ('*/data/log/power_off_reset_reason.txt','*/data/log/power_off_reset_reason_backup.txt'),
-                get_powerOffReset)
-}
\ No newline at end of file
diff --git a/scripts/artifacts/protonmailContacts.py b/scripts/artifacts/protonmailContacts.py
index b4eab2d..b90c4da 100644
--- a/scripts/artifacts/protonmailContacts.py
+++ b/scripts/artifacts/protonmailContacts.py
@@ -46,11 +46,4 @@ def get_protonmailContacts(files_found, report_folder, seeker, wrap_text):
         else:
             logfunc('No ProtonMail - Contacts data available')
         
-        db.close()
-        
-__artifacts__ = {
-        "protonmailContacts": (
-                "ProtonMail",
-                ('*/data/data/ch.protonmail.android/databases/*-ContactsDatabase.db*'),
-                get_protonmailContacts)
-}
\ No newline at end of file
+        db.close()
\ No newline at end of file
diff --git a/scripts/artifacts/protonmailMessages.py b/scripts/artifacts/protonmailMessages.py
index ffc6dd0..f54de55 100644
--- a/scripts/artifacts/protonmailMessages.py
+++ b/scripts/artifacts/protonmailMessages.py
@@ -70,11 +70,4 @@ def get_protonmailMessages(files_found, report_folder, seeker, wrap_text):
         else:
             logfunc('No ProtonMail - Messages data available')
         
-        db.close()
-        
-__artifacts__ = {
-        "protonmailMessages": (
-                "ProtonMail",
-                ('*/data/data/ch.protonmail.android/databases/*-MessagesDatabase.db*'),
-                get_protonmailMessages)
-}
\ No newline at end of file
+        db.close()
\ No newline at end of file
diff --git a/scripts/artifacts/recentactivity.py b/scripts/artifacts/recentactivity.py
index c8a6d48..5c8b6ab 100644
--- a/scripts/artifacts/recentactivity.py
+++ b/scripts/artifacts/recentactivity.py
@@ -207,10 +207,4 @@ def process_recentactivity(folder, uid, report_folder):
             report.write_raw_html('<br />')
         
         report.end_artifact_report()
-
-__artifacts__ = {
-        "recentactivity": (
-                "Recent Activity",
-                ('*/data/system_ce/*'),
-                get_recentactivity)
-}
\ No newline at end of file
+    
\ No newline at end of file
diff --git a/scripts/artifacts/roles.py b/scripts/artifacts/roles.py
index 2df39b1..3676473 100644
--- a/scripts/artifacts/roles.py
+++ b/scripts/artifacts/roles.py
@@ -58,10 +58,5 @@ def get_roles(files_found, report_folder, seeker, wrap_text):
                     tsvname = f'App Roles_{user}'
                     tsv(report_folder, data_headers, data_list, tsvname)
 
-__artifacts__ = {
-        "roles": (
-                "App Roles",
-                ('*/system/users/*/roles.xml','*/misc_de/*/apexdata/com.android.permission/roles.xml'),
-                get_roles)
-}
+                
             
\ No newline at end of file
diff --git a/scripts/artifacts/runtimePerms.py b/scripts/artifacts/runtimePerms.py
index ceb8c90..867bc2f 100644
--- a/scripts/artifacts/runtimePerms.py
+++ b/scripts/artifacts/runtimePerms.py
@@ -61,9 +61,4 @@ def get_runtimePerms(files_found, report_folder, seeker, wrap_text):
                     tsvname = f'Runtime Permissions_{user}'
                     tsv(report_folder, data_headers, data_list, tsvname)
                 
-__artifacts__ = {
-        "runtimePerms": (
-                "Permissions",
-                ('*/system/users/*/runtime-permissions.xml','*/misc_de/*/apexdata/com.android.permission/runtime-permissions.xml'),
-                get_runtimePerms)
-}
\ No newline at end of file
+            
\ No newline at end of file
diff --git a/scripts/artifacts/sRecoveryhist.py b/scripts/artifacts/sRecoveryhist.py
index 0ddaf1f..1e4f050 100644
--- a/scripts/artifacts/sRecoveryhist.py
+++ b/scripts/artifacts/sRecoveryhist.py
@@ -69,11 +69,4 @@ def get_sRecoveryhist(files_found, report_folder, seeker, wrap_text):
             tlactivity = f'Samsung Recovery History'
             timeline(report_folder, tlactivity, data_list, data_headers)
         else:
-            logfunc('No Samsung Recovery History data available')
-
-__artifacts__ = {
-        "sRecoveryhist": (
-                "Wipe & Setup",
-                ('*/efs/recovery/history'),
-                get_sRecoveryhist)
-}
\ No newline at end of file
+            logfunc('No Samsung Recovery History data available')
\ No newline at end of file
diff --git a/scripts/artifacts/sWipehist.py b/scripts/artifacts/sWipehist.py
index b9ec50a..92c526f 100644
--- a/scripts/artifacts/sWipehist.py
+++ b/scripts/artifacts/sWipehist.py
@@ -71,11 +71,4 @@ def get_sWipehist(files_found, report_folder, seeker, wrap_text):
             tlactivity = f'Samsung Wipe History'
             timeline(report_folder, tlactivity, data_list, data_headers)
         else:
-            logfunc('No Samsung Wipe History data available')
-
-__artifacts__ = {
-        "sWipehist": (
-                "Wipe & Setup",
-                ('*/efs/recovery/history'),
-                get_sWipehist)
-}
\ No newline at end of file
+            logfunc('No Samsung Wipe History data available')
\ No newline at end of file
diff --git a/scripts/artifacts/samsungSmartThings.py b/scripts/artifacts/samsungSmartThings.py
index 52b96ae..55c9004 100644
--- a/scripts/artifacts/samsungSmartThings.py
+++ b/scripts/artifacts/samsungSmartThings.py
@@ -55,10 +55,3 @@ def get_samsungSmartThings(files_found, report_folder, seeker, wrap_text):
             logfunc('No Samsung SmartThings - Quick Connect data available')
         
         db.close()
-        
-__artifacts__ = {
-        "samsungSmartThings": (
-                "Samsung SmartThings",
-                ('*/com.samsung.android.oneconnect/databases/QcDB.db*'),
-                get_samsungSmartThings)
-}
diff --git a/scripts/artifacts/samsungWeatherClock.py b/scripts/artifacts/samsungWeatherClock.py
index 6af3e65..c9a945e 100644
--- a/scripts/artifacts/samsungWeatherClock.py
+++ b/scripts/artifacts/samsungWeatherClock.py
@@ -135,11 +135,4 @@ def get_samsungWeatherClock(files_found, report_folder, seeker, wrap_text):
             logfunc('No Samsung Weather Clock - Hourly data available')
         
     db.close()
-
-__artifacts__ = {
-        "samsungWeatherClock": (
-                "Samsung Weather Clock",
-                ('*/com.sec.android.daemonapp/databases/WeatherClock*'),
-                get_samsungWeatherClock)
-}
-
+    return
diff --git a/scripts/artifacts/scontextLog.py b/scripts/artifacts/scontextLog.py
index 85a2326..2c036e2 100644
--- a/scripts/artifacts/scontextLog.py
+++ b/scripts/artifacts/scontextLog.py
@@ -48,10 +48,4 @@ def get_scontextLog(files_found, report_folder, seeker, wrap_text):
         logfunc('No Samsung Context Log data available')
     
     db.close()
-
-__artifacts__ = {
-        "scontextLog": (
-                "App Interaction",
-                ('*/com.samsung.android.providers.context/databases/ContextLog.db'),
-                get_scontextLog)
-}
\ No newline at end of file
+    return
\ No newline at end of file
diff --git a/scripts/artifacts/settingsSecure.py b/scripts/artifacts/settingsSecure.py
index cbf3356..0fd8690 100644
--- a/scripts/artifacts/settingsSecure.py
+++ b/scripts/artifacts/settingsSecure.py
@@ -67,9 +67,4 @@ def process_ssecure(file_path, uid, report_folder):
     else:
         logfunc('No Settings Secure data available')
         
-__artifacts__ = {
-        "settingsSecure": (
-                "Device Info",
-                ('*/system/users/*/settings_secure.xml'),
-                get_settingsSecure)
-}
\ No newline at end of file
+    
\ No newline at end of file
diff --git a/scripts/artifacts/setupWizardinfo.py b/scripts/artifacts/setupWizardinfo.py
index d09ceef..ae3681c 100644
--- a/scripts/artifacts/setupWizardinfo.py
+++ b/scripts/artifacts/setupWizardinfo.py
@@ -35,11 +35,4 @@ def get_setupWizardinfo(files_found, report_folder, seeker, wrap_text):
             tlactivity = f'Setup_Wizard_Info XML data'
             timeline(report_folder, tlactivity, data_list, data_headers)
         else:
-            logfunc('No Setup_Wizard_Info XML data available')
-            
-__artifacts__ = {
-        "setupWizardinfo": (
-                "Wipe & Setup",
-                ('*/data/com.google.android.settings.intelligence/shared_prefs/setup_wizard_info.xml'),
-                get_setupWizardinfo)
-}
\ No newline at end of file
+            logfunc('No Setup_Wizard_Info XML data available')
\ No newline at end of file
diff --git a/scripts/artifacts/shareit.py b/scripts/artifacts/shareit.py
index 5d1e972..1ba4d36 100644
--- a/scripts/artifacts/shareit.py
+++ b/scripts/artifacts/shareit.py
@@ -53,10 +53,4 @@ def get_shareit(files_found, report_folder, seeker, wrap_text):
         logfunc('No Shareit file transfer data available')
 
     db.close()
-
-__artifacts__ = {
-        "shareit": (
-                "File Transfer",
-                ('*/com.lenovo.anyshare.gps/databases/history.db*'),
-                get_shareit)
-}
+    return
diff --git a/scripts/artifacts/shutdown_checkpoints.py b/scripts/artifacts/shutdown_checkpoints.py
index 45df74d..7145784 100644
--- a/scripts/artifacts/shutdown_checkpoints.py
+++ b/scripts/artifacts/shutdown_checkpoints.py
@@ -49,10 +49,3 @@ def get_shutdown_checkpoints(files_found, report_folder, seeker, wrap_text):
         
     else:
         logfunc('No Shutdown Checkpoints data available')
-
-__artifacts__ = {
-        "shutdown_checkpoints": (
-                "Power Events",
-                ('*/data/system/shutdown-checkpoints/*'),
-                get_shutdown_checkpoints)
-}
\ No newline at end of file
diff --git a/scripts/artifacts/siminfo.py b/scripts/artifacts/siminfo.py
index aa1ca56..219dc43 100644
--- a/scripts/artifacts/siminfo.py
+++ b/scripts/artifacts/siminfo.py
@@ -86,11 +86,4 @@ def process_siminfo(folder, uid, report_folder):
         tsv(report_folder, data_headers, data_list, tsvname)
     else:
         logfunc(f'No SIM_Info{uid} data available')    
-    db.close()
-
-__artifacts__ = {
-        "siminfo": (
-                "Device Info",
-                ('*/user_de/*/com.android.providers.telephony/databases/telephony.db'),
-                get_siminfo)
-}
\ No newline at end of file
+    db.close()
\ No newline at end of file
diff --git a/scripts/artifacts/skout.py b/scripts/artifacts/skout.py
index 1e70466..c14b97b 100644
--- a/scripts/artifacts/skout.py
+++ b/scripts/artifacts/skout.py
@@ -92,10 +92,4 @@ def get_skout(files_found, report_folder, seeker, wrap_text):
                 
         
     db.close()
-
-__artifacts__ = {
-        "skout": (
-                "Skout",
-                ('*/data/com.skout.android/databases/skoutDatabase*'),
-                get_skout)
-}
\ No newline at end of file
+    
\ No newline at end of file
diff --git a/scripts/artifacts/skype.py b/scripts/artifacts/skype.py
index b08856a..bd21427 100644
--- a/scripts/artifacts/skype.py
+++ b/scripts/artifacts/skype.py
@@ -203,9 +203,4 @@ def get_skype(files_found, report_folder, seeker, wrap_text):
 
         db.close
         
-__artifacts__ = {
-        "skype": (
-                "Skype",
-                ('*/com.skype.raider/databases/live*'),
-                get_skype)
-}
\ No newline at end of file
+    return
\ No newline at end of file
diff --git a/scripts/artifacts/slopes.py b/scripts/artifacts/slopes.py
index d62c09f..78fd4cd 100644
--- a/scripts/artifacts/slopes.py
+++ b/scripts/artifacts/slopes.py
@@ -146,10 +146,4 @@ def get_slopes(files_found, report_folder, seeker, wrap_text):
             logfunc('No Slopes - Lift Details data available')
 
         db.close()
-
-__artifacts__ = {
-        "slopes": (
-                "Slopes",
-                ('*/data/com.consumedbycode.slopes/databases/slopes.db*'),
-                get_slopes)
-}
+        return
diff --git a/scripts/artifacts/smanagerCrash.py b/scripts/artifacts/smanagerCrash.py
index a4d836d..508c46c 100644
--- a/scripts/artifacts/smanagerCrash.py
+++ b/scripts/artifacts/smanagerCrash.py
@@ -39,10 +39,4 @@ def get_smanagerCrash(files_found, report_folder, seeker, wrap_text):
         logfunc('No Samsung Smart Manager - Crash data available')
     
     db.close()
-
-__artifacts__ = {
-        "smanagerCrash": (
-                "App Interaction",
-                ('*/com.samsung.android.sm/databases/sm.db'),
-                get_smanagerCrash)
-}
\ No newline at end of file
+    return
\ No newline at end of file
diff --git a/scripts/artifacts/smanagerLow.py b/scripts/artifacts/smanagerLow.py
index dd404ed..830e1f1 100644
--- a/scripts/artifacts/smanagerLow.py
+++ b/scripts/artifacts/smanagerLow.py
@@ -44,10 +44,4 @@ def get_smanagerLow(files_found, report_folder, seeker, wrap_text):
         logfunc('No Samsung Smart Manager - Usage data available')
     
     db.close()
-
-__artifacts__ = {
-        "smanagerLow": (
-                "App Interaction",
-                ('*/com.samsung.android.sm/databases/lowpowercontext-system-db'),
-                get_smanagerLow)
-}
\ No newline at end of file
+    return
\ No newline at end of file
diff --git a/scripts/artifacts/smembersAppInv.py b/scripts/artifacts/smembersAppInv.py
index 6ee76ca..b61b494 100644
--- a/scripts/artifacts/smembersAppInv.py
+++ b/scripts/artifacts/smembersAppInv.py
@@ -44,10 +44,4 @@ def get_smembersAppInv(files_found, report_folder, seeker, wrap_text):
         logfunc('No Samsung Members - Apps data available')
     
     db.close()
-
-__artifacts__ = {
-        "smembersAppInv": (
-                "App Interaction",
-                ('*/com.samsung.oh/databases/com_pocketgeek_sdk_app_inventory.db'),
-                get_smembersAppInv)
-}
\ No newline at end of file
+    return
\ No newline at end of file
diff --git a/scripts/artifacts/smembersEvents.py b/scripts/artifacts/smembersEvents.py
index 17fbeaf..404e4a7 100644
--- a/scripts/artifacts/smembersEvents.py
+++ b/scripts/artifacts/smembersEvents.py
@@ -41,10 +41,4 @@ def get_smembersEvents(files_found, report_folder, seeker, wrap_text):
         logfunc('No Samsung Members - Events data available')
     
     db.close()
-
-__artifacts__ = {
-        "smembersEvents": (
-                "App Interaction",
-                ('*/com.samsung.oh/databases/com_pocketgeek_sdk.db'),
-                get_smembersEvents)
-}
\ No newline at end of file
+    return
\ No newline at end of file
diff --git a/scripts/artifacts/smsmms.py b/scripts/artifacts/smsmms.py
index 1164508..232853e 100644
--- a/scripts/artifacts/smsmms.py
+++ b/scripts/artifacts/smsmms.py
@@ -277,10 +277,3 @@ def read_mms_messages(db, report_folder, file_found, seeker):
         logfunc('No MMS messages found!')
         return False
     return True
-
-__artifacts__ = {
-        "sms_mms": (
-                "SMS & MMS",
-                ('*/com.android.providers.telephony/databases/mmssms*'),
-                get_sms_mms)
-}
\ No newline at end of file
diff --git a/scripts/artifacts/smyFiles.py b/scripts/artifacts/smyFiles.py
index 3f59030..5537d5d 100644
--- a/scripts/artifacts/smyFiles.py
+++ b/scripts/artifacts/smyFiles.py
@@ -93,10 +93,4 @@ def get_smyFiles(files_found, report_folder, seeker, wrap_text):
         logfunc('No My Files DB Recent Files data available')
 
     db.close()
-
-__artifacts__ = {
-        "smyFiles": (
-                "My Files",
-                ('*/com.sec.android.app.myfiles/databases/MyFiles*.db*'),
-                get_smyFiles)
-}
\ No newline at end of file
+    return
\ No newline at end of file
diff --git a/scripts/artifacts/smyfilesRecents.py b/scripts/artifacts/smyfilesRecents.py
index f2ccf01..738d42e 100644
--- a/scripts/artifacts/smyfilesRecents.py
+++ b/scripts/artifacts/smyfilesRecents.py
@@ -49,10 +49,4 @@ def get_smyfilesRecents(files_found, report_folder, seeker, wrap_text):
         logfunc('No My Files DB Recents data available')
     
     db.close()
-
-__artifacts__ = {
-        "smyfilesRecents": (
-                "My Files",
-                ('*/com.sec.android.app.myfiles/databases/myfiles.db'),
-                get_smyfilesRecents)
-}
\ No newline at end of file
+    return
\ No newline at end of file
diff --git a/scripts/artifacts/smyfilesStored.py b/scripts/artifacts/smyfilesStored.py
index fc2c790..46c4a4e 100644
--- a/scripts/artifacts/smyfilesStored.py
+++ b/scripts/artifacts/smyfilesStored.py
@@ -43,10 +43,4 @@ def get_smyfilesStored(files_found, report_folder, seeker, text_wrap):
         logfunc('No My Files DB Stored data available')
     
     db.close()
-
-__artifacts__ = {
-        "smyfilesStored": (
-                "My Files",
-                ('*/com.sec.android.app.myfiles/databases/FileCache.db*'),
-                get_smyfilesStored)
-}
\ No newline at end of file
+    return
\ No newline at end of file
diff --git a/scripts/artifacts/smyfilescache.py b/scripts/artifacts/smyfilescache.py
index cf4d7a9..b284210 100644
--- a/scripts/artifacts/smyfilescache.py
+++ b/scripts/artifacts/smyfilescache.py
@@ -58,10 +58,4 @@ def get_smyfilescache(files_found, report_folder, seeker, text_wrap):
         logfunc('No My Files DB Stored data available')
     
     db.close()
-
-__artifacts__ = {
-        "smyfilescache": (
-                "My Files",
-                ('*/com.sec.android.app.myfiles/databases/FileCache.db*','*/com.sec.android.app.myfiles/cache/*.*'),
-                get_smyfilescache)
-}
\ No newline at end of file
+    return
\ No newline at end of file
diff --git a/scripts/artifacts/snapchat.py b/scripts/artifacts/snapchat.py
index 5067eb1..83af283 100644
--- a/scripts/artifacts/snapchat.py
+++ b/scripts/artifacts/snapchat.py
@@ -382,10 +382,3 @@ def get_snapchat(files_found, report_folder, seeker, wrap_text):
     ]
     if not (True in artifacts):
         logfunc(f'{APP_NAME} data not found')
-
-__artifacts__ = {
-        "snapchat": (
-                "Snapchat",
-                ('*/data/com.snapchat.android/databases/*.db', '*/data/com.snapchat.android/shared_prefs/*.xml'),
-                get_snapchat)
-}
\ No newline at end of file
diff --git a/scripts/artifacts/suggestions.py b/scripts/artifacts/suggestions.py
index 3b6050f..39142f0 100644
--- a/scripts/artifacts/suggestions.py
+++ b/scripts/artifacts/suggestions.py
@@ -41,11 +41,4 @@ def get_suggestions(files_found, report_folder, seeker, wrap_text):
             tlactivity = f'Suggestions XML data'
             timeline(report_folder, tlactivity, data_list, data_headers)
         else:
-            logfunc('No Suggestions XML data available')
-
-__artifacts__ = {
-        "suggestions": (
-                "Wipe & Setup",
-                ('*/data/com.google.android.settings.intelligence/shared_prefs/suggestions.xml'),
-                get_suggestions)
-}
\ No newline at end of file
+            logfunc('No Suggestions XML data available')
\ No newline at end of file
diff --git a/scripts/artifacts/swellbeing.py b/scripts/artifacts/swellbeing.py
index 43459e0..d53ba83 100644
--- a/scripts/artifacts/swellbeing.py
+++ b/scripts/artifacts/swellbeing.py
@@ -65,10 +65,4 @@ def get_swellbeing(files_found, report_folder, seeker, wrap_text):
             logfunc('No Samsung Wellbeing event data available')
         
         db.close()
-
-__artifacts__ = {
-        "swellbeing": (
-                "Wellbeing",
-                ('*/com.samsung.android.forest/databases/dwbCommon.db*'),
-                get_swellbeing)
-}
\ No newline at end of file
+        return
\ No newline at end of file
diff --git a/scripts/artifacts/tangomessage.py b/scripts/artifacts/tangomessage.py
index fe4c14e..cc81c4d 100644
--- a/scripts/artifacts/tangomessage.py
+++ b/scripts/artifacts/tangomessage.py
@@ -65,10 +65,4 @@ def get_tangomessage(files_found, report_folder, seeker, wrap_text):
         logfunc('No Tango Messages data available')
 
     db.close()
-
-__artifacts__ = {
-        "tangomessage": (
-                "Tango",
-                ('*/com.sgiggle.production/files/tc.db*'),
-                get_tangomessage)
-}
+    return
diff --git a/scripts/artifacts/teams.py b/scripts/artifacts/teams.py
index c516a88..4ca43bb 100644
--- a/scripts/artifacts/teams.py
+++ b/scripts/artifacts/teams.py
@@ -198,12 +198,6 @@ def get_teams(files_found, report_folder, seeker, wrap_text):
         else:
             logfunc('No Teams File Info data available')
             
+            
     db.close()
-
-__artifacts__ = {
-        "teams": (
-                "Teams",
-                ('*/com.microsoft.teams/databases/SkypeTeams.db*'),
-                get_teams)
-}
     
\ No newline at end of file
diff --git a/scripts/artifacts/textnow.py b/scripts/artifacts/textnow.py
index 247b96c..658bb6b 100644
--- a/scripts/artifacts/textnow.py
+++ b/scripts/artifacts/textnow.py
@@ -165,9 +165,4 @@ def get_textnow(files_found, report_folder, seeker, wrap_text):
 
     db.close
     
-__artifacts__ = {
-    "textnow": (
-        "Text Now",
-        ('*/com.enflick.android.TextNow/databases/textnow_data.db*'),
-        get_textnow)
-}
\ No newline at end of file
+    return
\ No newline at end of file
diff --git a/scripts/artifacts/tikTok.py b/scripts/artifacts/tikTok.py
index 6b48a5a..e680b8e 100644
--- a/scripts/artifacts/tikTok.py
+++ b/scripts/artifacts/tikTok.py
@@ -93,10 +93,4 @@ def get_tikTok(files_found, report_folder, seeker, wrap_text):
         logfunc('No TikTok Contacts available')
     
     db.close()
-
-__artifacts__ = {
-        "tikTok": (
-                "TikTok",
-                ('*_im.db*', '*db_im_xx*'),
-                get_tikTok)
-}
\ No newline at end of file
+    
\ No newline at end of file
diff --git a/scripts/artifacts/torThumbs.py b/scripts/artifacts/torThumbs.py
index e12ad2c..7f761c0 100644
--- a/scripts/artifacts/torThumbs.py
+++ b/scripts/artifacts/torThumbs.py
@@ -53,9 +53,6 @@ def get_torThumbs(files_found, report_folder, seeker, wrap_text):
     else:
         logfunc('No TOR Thumbnails data available')
         
-__artifacts__ = {
-        "torThumbs": (
-                "TOR",
-                ('*/org.torproject.torbrowser/cache/mozac_browser_thumbnails/thumbnails/*.0'),
-                get_torThumbs)
-}
\ No newline at end of file
+
+        
+        
\ No newline at end of file
diff --git a/scripts/artifacts/usageapps.py b/scripts/artifacts/usageapps.py
index 51e0474..0417b62 100644
--- a/scripts/artifacts/usageapps.py
+++ b/scripts/artifacts/usageapps.py
@@ -117,10 +117,6 @@ def get_usageapps(files_found, report_folder, seeker, wrap_text):
             logfunc('No Usage Apps data available')
         
         db.close()
+        return
+    
 
-__artifacts__ = {
-        "usageapps": (
-                "App Interaction",
-                ('*/com.google.android.as/databases/reflection_gel_events.db*'),
-                get_usageapps)
-}
\ No newline at end of file
diff --git a/scripts/artifacts/usagestats.py b/scripts/artifacts/usagestats.py
index e424d4b..e83ba61 100644
--- a/scripts/artifacts/usagestats.py
+++ b/scripts/artifacts/usagestats.py
@@ -568,11 +568,4 @@ def process_usagestats(folder, uid, report_folder, version):
     timeline(report_folder, tlactivity, data_list, data_headers)
 
     logfunc(f'Records processed for user {uid}: {processed}')
-    db.close()
-    
-__artifacts__ = {
-    "usagestats": (
-        "Usage Stats",
-        ('*/system/usagestats/*', '*/system_ce/*/usagestats*'),
-        get_usagestats)
-}
\ No newline at end of file
+    db.close()
\ No newline at end of file
diff --git a/scripts/artifacts/usagestatsVersion.py b/scripts/artifacts/usagestatsVersion.py
index 6f0d8c1..6f5db88 100644
--- a/scripts/artifacts/usagestatsVersion.py
+++ b/scripts/artifacts/usagestatsVersion.py
@@ -1,13 +1,14 @@
 import csv
-import scripts.artifacts.artGlobals 
-
-from scripts.artifact_report import ArtifactHtmlReport
-from scripts.ilapfuncs import logfunc, tsv, logdevinfo, is_platform_windows
-
-def get_usagestatsVersion(files_found, report_folder, seeker, wrap_text):
-    data_list = []
-    file_found = str(files_found[0])
-
+import scripts.artifacts.artGlobals 
+
+from scripts.artifact_report import ArtifactHtmlReport
+from scripts.ilapfuncs import logfunc, tsv, logdevinfo, is_platform_windows
+
+
+def get_usagestatsVersion(files_found, report_folder, seeker, wrap_text):
+    data_list = []
+    file_found = str(files_found[0])
+
     with open(file_found, "r") as f:
         for line in f:
             splits = line.split(';')
@@ -37,18 +38,25 @@ def get_usagestatsVersion(files_found, report_folder, seeker, wrap_text):
                 
                 logdevinfo(f"Build version per Usagestats: {splits[2]}")
                 data_list.append(('Build Version', splits[2]))
-
-
-    if len(data_list) > 0:
-        report = ArtifactHtmlReport('OS Version')
-        report.start_artifact_report(report_folder, f'OS Version')
-        report.add_script()
-        data_headers = ('Key', 'Value')
-        report.write_artifact_data_table(data_headers, data_list, file_found)
-        report.end_artifact_report()
-        
-        tsvname = f'OS Version'
-        tsv(report_folder, data_headers, data_list, tsvname)
-        
-    else:
-        logfunc(f'No OS Version file available')
\ No newline at end of file
+
+    if len(data_list) > 0:
+        report = ArtifactHtmlReport('OS Version')
+        report.start_artifact_report(report_folder, f'OS Version')
+        report.add_script()
+        data_headers = ('Key', 'Value')
+        report.write_artifact_data_table(data_headers, data_list, file_found)
+        report.end_artifact_report()
+        
+        tsvname = f'OS Version'
+        tsv(report_folder, data_headers, data_list, tsvname)
+        
+    else:
+        logfunc(f'No OS Version file available')
+
+
+__artifacts__ = {
+    "Usage Stats Version": (
+        "Usage Stats",
+        ('*/system/usagestats/*/version', '*/system_ce/*/usagestats/version'),
+        get_usagestatsVersion)
+}
\ No newline at end of file
diff --git a/scripts/artifacts/userDict.py b/scripts/artifacts/userDict.py
index f4fafc6..cc01165 100644
--- a/scripts/artifacts/userDict.py
+++ b/scripts/artifacts/userDict.py
@@ -39,11 +39,5 @@ def get_userDict(files_found, report_folder, seeker, wrap_text):
         logfunc('No User Dictionary data available')
     
     db.close()
-
-__artifacts__ = {
-    "userDict": (
-        "User Dictionary",
-        ('*/com.android.providers.userdictionary/databases/user_dict.db*'),
-        get_userDict)
-}
+    return
 
diff --git a/scripts/artifacts/vaulty_files.py b/scripts/artifacts/vaulty_files.py
index 4df90db..5767db3 100644
--- a/scripts/artifacts/vaulty_files.py
+++ b/scripts/artifacts/vaulty_files.py
@@ -30,10 +30,3 @@ def get_vaulty_files(files_found, report_folder, seeker, wrap_text):
     report.end_artifact_report()
     
     tsv(report_folder, data_headers, data_list, title)
-
-__artifacts__ = {
-    "vaulty_files": (
-        "Vaulty",
-        ('*/data/data/com.theronrogers.vaultyfree/databases/media.db'),
-        get_vaulty_files)
-}
\ No newline at end of file
diff --git a/scripts/artifacts/vaulty_info.py b/scripts/artifacts/vaulty_info.py
index 02ef717..f0691fc 100644
--- a/scripts/artifacts/vaulty_info.py
+++ b/scripts/artifacts/vaulty_info.py
@@ -84,10 +84,3 @@ def get_vaulty_info(files_found, report_folder, seeker, wrap_text):
     report.end_artifact_report()
     
     tsv(report_folder, data_headers, data_list, title)
-
-__artifacts__ = {
-    "vaulty_info": (
-        "Vaulty",
-        ('*/data/data/com.theronrogers.vaultyfree/shared_prefs/com.theronrogers.vaultyfree_preferences.xml'),
-        get_vaulty_info)
-}
\ No newline at end of file
diff --git a/scripts/artifacts/vlcMedia.py b/scripts/artifacts/vlcMedia.py
index 4d4fc1b..73aecac 100644
--- a/scripts/artifacts/vlcMedia.py
+++ b/scripts/artifacts/vlcMedia.py
@@ -51,8 +51,9 @@ def get_vlcMedia(files_found, report_folder, seeker, wrap_text):
     else:
         logfunc('No VLC Media data available')
     
-    db.close()
-    return 
-
-        
-        
\ No newline at end of file
+__artifacts__ = {
+        "VLC": (
+                "VLC",
+                ('*vlc_media.db*'),
+                get_vlcMedia)
+}
\ No newline at end of file
diff --git a/scripts/artifacts/vlcThumbs.py b/scripts/artifacts/vlcThumbs.py
index 18be991..5a1156c 100644
--- a/scripts/artifacts/vlcThumbs.py
+++ b/scripts/artifacts/vlcThumbs.py
@@ -30,7 +30,12 @@ def get_vlcThumbs(files_found, report_folder, seeker, wrap_text):
     tsvname = 'VLC Thumbnails'
     tsv(report_folder, data_headers, data_list, tsvname)
         
-
+__artifacts__ = {
+        "VLC Thumbs": (
+                "VLC",
+                ('*/org.videolan.vlc/files/medialib/*.jpg'),
+                get_vlcThumbs)
+}
 
         
         
\ No newline at end of file
diff --git a/scripts/artifacts/walStrings.py b/scripts/artifacts/walStrings.py
index 23bf007..a32e569 100644
--- a/scripts/artifacts/walStrings.py
+++ b/scripts/artifacts/walStrings.py
@@ -58,10 +58,4 @@ def get_walStrings(files_found, report_folder, seeker, wrap_text):
     report.write_artifact_data_table(data_headers, data_list, location, html_escape=False)
     report.end_artifact_report()
 
-__artifacts__ = {
-        "walStrings": (
-                "SQLite Journaling",
-                ('*/*-wal', '*/*-journal'),
-                get_walStrings)
-}
-    
\ No newline at end of file
+  
\ No newline at end of file
diff --git a/scripts/artifacts/waze.py b/scripts/artifacts/waze.py
index 83e570b..0cfc5f2 100644
--- a/scripts/artifacts/waze.py
+++ b/scripts/artifacts/waze.py
@@ -51,10 +51,4 @@ def get_waze(files_found, report_folder, seeker, wrap_text):
         
     db.close()
 
-__artifacts__ = {
-        "waze": (
-                "Waze",
-                ('*/com.waze/user.db*'),
-                get_waze)
-}
     
\ No newline at end of file
diff --git a/scripts/artifacts/wellbeing.py b/scripts/artifacts/wellbeing.py
index 13dd498..7172fb0 100644
--- a/scripts/artifacts/wellbeing.py
+++ b/scripts/artifacts/wellbeing.py
@@ -57,10 +57,4 @@ def get_wellbeing(files_found, report_folder, seeker, wrap_text):
             logfunc('No Wellbeing event data available')
         
         db.close()
-
-__artifacts__ = {
-        "wellbeing": (
-                "Wellbeing",
-                ('*/com.google.android.apps.wellbeing/databases/app_usage*'),
-                get_wellbeing)
-}
\ No newline at end of file
+        return
\ No newline at end of file
diff --git a/scripts/artifacts/wellbeingURLs.py b/scripts/artifacts/wellbeingURLs.py
index 3315344..a537ba9 100644
--- a/scripts/artifacts/wellbeingURLs.py
+++ b/scripts/artifacts/wellbeingURLs.py
@@ -53,10 +53,4 @@ def get_wellbeingURLs(files_found, report_folder, seeker, wrap_text):
             logfunc('No Wellbeing URL event data available')
         
         db.close()
-
-__artifacts__ = {
-        "wellbeingURLs": (
-                "Wellbeing",
-                ('*/com.google.android.apps.wellbeing/databases/app_usage*'),
-                get_wellbeingURLs)
-}
\ No newline at end of file
+        return
\ No newline at end of file
diff --git a/scripts/artifacts/wellbeingaccount.py b/scripts/artifacts/wellbeingaccount.py
index c41ffcd..45d543f 100644
--- a/scripts/artifacts/wellbeingaccount.py
+++ b/scripts/artifacts/wellbeingaccount.py
@@ -22,11 +22,4 @@ def get_wellbeingaccount(files_found, report_folder, seeker, wrap_text):
     report.end_artifact_report()
     
     tsvname = f'wellbeing account'
-    tsv(report_folder, data_headers, data_list, tsvname)
-
-__artifacts__ = {
-        "wellbeingaccount": (
-                "Wellbeing",
-                ('*/com.google.android.apps.wellbeing/files/AccountData.pb'),
-                get_wellbeingaccount)
-}
\ No newline at end of file
+    tsv(report_folder, data_headers, data_list, tsvname)
\ No newline at end of file
diff --git a/scripts/artifacts/wifiConfigstore.py b/scripts/artifacts/wifiConfigstore.py
index 0115bd8..d8405fb 100644
--- a/scripts/artifacts/wifiConfigstore.py
+++ b/scripts/artifacts/wifiConfigstore.py
@@ -65,11 +65,4 @@ def get_wifiConfigstore(files_found, report_folder, seeker, wrap_text):
             tlactivity = f'Wifi Configuration Store data'
             timeline(report_folder, tlactivity, data_list, data_headers)
         else:
-            logfunc('No Wifi Configuration Store data available')
-            
-__artifacts__ = {
-        "wifiConfigstore": (
-                "WiFi Profiles",
-                ('*/misc/wifi/WifiConfigStore.xml', '*/misc**/apexdata/com.android.wifi/WifiConfigStore.xml'),
-                get_wifiConfigstore)
-}
\ No newline at end of file
+            logfunc('No Wifi Configuration Store data available')
\ No newline at end of file
diff --git a/scripts/artifacts/wifiHotspot.py b/scripts/artifacts/wifiHotspot.py
index 395bfca..aefbb7e 100644
--- a/scripts/artifacts/wifiHotspot.py
+++ b/scripts/artifacts/wifiHotspot.py
@@ -52,11 +52,4 @@ def get_wifiHotspot(files_found, report_folder, seeker, wrap_text):
         tsvname = f'wifi hotspot'
         tsv(report_folder, data_headers, data_list, tsvname)
     else:
-        logfunc('No Wi-Fi Hotspot data available')
-
-__artifacts__ = {
-        "wifiHotspot": (
-                "WiFi Profiles",
-                ('*/misc/wifi/softap.conf', '*/misc**/apexdata/com.android.wifi/WifiConfigStoreSoftAp.xml'),
-                get_wifiHotspot)
-}
\ No newline at end of file
+        logfunc('No Wi-Fi Hotspot data available')
\ No newline at end of file
diff --git a/scripts/artifacts/wifiProfiles.py b/scripts/artifacts/wifiProfiles.py
index 54abaf3..55c87dc 100644
--- a/scripts/artifacts/wifiProfiles.py
+++ b/scripts/artifacts/wifiProfiles.py
@@ -166,10 +166,4 @@ def get_wifiProfiles(files_found, report_folder, seeker, wrap_text):
         tsv(report_folder, data_headers, data_list, tsvname)
     else:
         logfunc('No Wi-Fi Profiles data available')
-
-__artifacts__ = {
-        "wifiProfiles": (
-                "WiFi Profiles",
-                ('*/misc/wifi/WifiConfigStore.xml', '*/misc**/apexdata/com.android.wifi/WifiConfigStore.xml'),
-                get_wifiProfiles)
-}
\ No newline at end of file
+  
\ No newline at end of file
diff --git a/scripts/report.py b/scripts/report.py
index 73b77f3..9a15071 100644
--- a/scripts/report.py
+++ b/scripts/report.py
@@ -89,7 +89,6 @@ def get_icon_name(category, artifact):
         if artifact.find('GROUP INFORMATION') >= 0:         icon = 'users'
         elif artifact.find('CHAT MESSAGES') >= 0:           icon = 'message-circle'
     elif category == 'GOOGLE DRIVE':     icon = 'file'
-    elif category == 'FILES BY GOOGLE':     icon = 'file'
     elif category == 'GOOGLE DUO':
         if artifact.find('CALL HISTORY') >= 0:      icon = 'phone-call'
         elif artifact.find('CONTACTS') >= 0:      icon = 'users'
-- 
2.34.1

